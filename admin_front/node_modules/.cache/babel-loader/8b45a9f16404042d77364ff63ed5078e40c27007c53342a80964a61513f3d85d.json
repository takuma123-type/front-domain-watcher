{"ast":null,"code":"import { Storage } from \"../infrastructure/Storage\";\nimport { InvlalidSessionTokenError as InvalidSessionTokenError } from \"../infrastructure/repositories\";\nimport { UserItem } from \"../models/presentation/UserItem\";\nexport class FetchUsersInput {}\nexport class FetchUsersOutput {\n  constructor(params) {\n    this.users = void 0;\n    this.users = params.users;\n  }\n}\nexport class FetchUsersUsecase {\n  static fetch(usersRepository, sessionToken) {\n    throw new Error(\"Method not implemented.\");\n  }\n  constructor(input) {\n    this.input = void 0;\n    this.input = input;\n  }\n  async fetch() {\n    const sessionToken = Storage.restoreSessionToken();\n    if (!sessionToken) {\n      return Promise.reject(new InvalidSessionTokenError());\n    }\n    try {\n      const usersCell = await usersRepository.fetch(sessionToken);\n      return usersCell.map(user => new UserItem(user));\n    } catch (err) {\n      console.error(err);\n      throw err;\n    }\n  }\n}","map":{"version":3,"names":["Storage","InvlalidSessionTokenError","InvalidSessionTokenError","UserItem","FetchUsersInput","FetchUsersOutput","constructor","params","users","FetchUsersUsecase","fetch","usersRepository","sessionToken","Error","input","restoreSessionToken","Promise","reject","usersCell","map","user","err","console","error"],"sources":["/usr/src/app/admin_front/src/usecases/FetchUsersUsecase.tsx"],"sourcesContent":["import { Storage } from \"../infrastructure/Storage\";\nimport {\n  InvlalidSessionTokenError as InvalidSessionTokenError,\n  UsersRepository,\n  UnauthorizedError,\n} from \"../infrastructure/repositories\";\nimport { UserItem } from \"../models/presentation/UserItem\";\n\nexport class FetchUsersInput {}\n\nexport class FetchUsersOutput {\n  readonly users: UserItem[];\n\n  constructor(params: { users: UserItem[] }) {\n    this.users = params.users;\n  }\n}\n\nexport class FetchUsersUsecase {\n  static fetch(usersRepository: UsersRepository, sessionToken: string) {\n    throw new Error(\"Method not implemented.\");\n  }\n  readonly input: FetchUsersInput;\n\n  constructor(input: FetchUsersInput) {\n    this.input = input;\n  }\n\n  async fetch(): Promise<FetchUsersOutput> {\n    const sessionToken = Storage.restoreSessionToken();\n    if (!sessionToken) {\n      return Promise.reject(new InvalidSessionTokenError());\n    }\n\n    try {\n      const usersCell = await usersRepository.fetch(sessionToken);\n      return usersCell.map((user: any) => new UserItem(user));\n    } catch (err) {\n      console.error(err);\n      throw err;\n    }\n  }\n}\n"],"mappings":"AAAA,SAASA,OAAO,QAAQ,2BAA2B;AACnD,SACEC,yBAAyB,IAAIC,wBAAwB,QAGhD,gCAAgC;AACvC,SAASC,QAAQ,QAAQ,iCAAiC;AAE1D,OAAO,MAAMC,eAAe,CAAC;AAE7B,OAAO,MAAMC,gBAAgB,CAAC;EAG5BC,WAAWA,CAACC,MAA6B,EAAE;IAAA,KAFlCC,KAAK;IAGZ,IAAI,CAACA,KAAK,GAAGD,MAAM,CAACC,KAAK;EAC3B;AACF;AAEA,OAAO,MAAMC,iBAAiB,CAAC;EAC7B,OAAOC,KAAKA,CAACC,eAAgC,EAAEC,YAAoB,EAAE;IACnE,MAAM,IAAIC,KAAK,CAAC,yBAAyB,CAAC;EAC5C;EAGAP,WAAWA,CAACQ,KAAsB,EAAE;IAAA,KAF3BA,KAAK;IAGZ,IAAI,CAACA,KAAK,GAAGA,KAAK;EACpB;EAEA,MAAMJ,KAAKA,CAAA,EAA8B;IACvC,MAAME,YAAY,GAAGZ,OAAO,CAACe,mBAAmB,CAAC,CAAC;IAClD,IAAI,CAACH,YAAY,EAAE;MACjB,OAAOI,OAAO,CAACC,MAAM,CAAC,IAAIf,wBAAwB,CAAC,CAAC,CAAC;IACvD;IAEA,IAAI;MACF,MAAMgB,SAAS,GAAG,MAAMP,eAAe,CAACD,KAAK,CAACE,YAAY,CAAC;MAC3D,OAAOM,SAAS,CAACC,GAAG,CAAEC,IAAS,IAAK,IAAIjB,QAAQ,CAACiB,IAAI,CAAC,CAAC;IACzD,CAAC,CAAC,OAAOC,GAAG,EAAE;MACZC,OAAO,CAACC,KAAK,CAACF,GAAG,CAAC;MAClB,MAAMA,GAAG;IACX;EACF;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}