{"ast":null,"code":"// FetchUsersUsecase.tsx\nimport { Storage } from \"../infrastructure/Storage\";\nimport { UnauthorizedError } from \"../infrastructure/repositories\";\nimport { UserItem } from \"../models/presentation/UserItem\";\nexport class FetchUsersOutput {\n  constructor(users) {\n    this.users = void 0;\n    this.users = users;\n  }\n}\nexport class FetchUsersUsecase {\n  constructor(usersRepository) {\n    this.usersRepository = void 0;\n    this.usersRepository = usersRepository;\n  }\n  async fetch() {\n    const sessionToken = Storage.restoreSessionToken() || \"temporaryToken\";\n    try {\n      var _response$data, _response$data$result;\n      const response = await this.usersRepository.fetch(sessionToken);\n      const users = (_response$data = response.data) === null || _response$data === void 0 ? void 0 : (_response$data$result = _response$data.results) === null || _response$data$result === void 0 ? void 0 : _response$data$result.map(user => new UserItem({\n        id: user.id,\n        code: user.code,\n        name: user.name,\n        status: user.status,\n        email: user.email\n      }));\n      console.log(\"user:\", users);\n      return new FetchUsersOutput(users || []);\n    } catch (e) {\n      if (e instanceof UnauthorizedError) {\n        Storage.clear();\n      }\n      throw e;\n    }\n  }\n}","map":{"version":3,"names":["Storage","UnauthorizedError","UserItem","FetchUsersOutput","constructor","users","FetchUsersUsecase","usersRepository","fetch","sessionToken","restoreSessionToken","_response$data","_response$data$result","response","data","results","map","user","id","code","name","status","email","console","log","e","clear"],"sources":["/usr/src/app/admin_front/src/usecases/FetchUsersUsecase.tsx"],"sourcesContent":["// FetchUsersUsecase.tsx\nimport { Storage } from \"../infrastructure/Storage\";\nimport {\n  InvlalidSessionTokenError,\n  UsersRepository,\n  UnauthorizedError,\n} from \"../infrastructure/repositories\";\nimport { UserItem } from \"../models/presentation/UserItem\";\n\nexport class FetchUsersOutput {\n  readonly users: UserItem[];\n\n  constructor(users: UserItem[]) {\n    this.users = users;\n  }\n}\n\nexport class FetchUsersUsecase {\n  private usersRepository: UsersRepository;\n\n  constructor(usersRepository: UsersRepository) {\n    this.usersRepository = usersRepository;\n  }\n\n  async fetch(): Promise<FetchUsersOutput> {\n    const sessionToken = Storage.restoreSessionToken() || \"temporaryToken\";\n\n    try {\n      const response = await this.usersRepository.fetch(sessionToken);\n      const users = response.data?.results?.map(\n        (user: any) =>\n          new UserItem({\n            id: user.id,\n            code: user.code,\n            name: user.name,\n            status: user.status,\n            email: user.email,\n          })\n      );\n      console.log(\"user:\", users);\n      return new FetchUsersOutput(users || []);\n    } catch (e) {\n      if (e instanceof UnauthorizedError) {\n        Storage.clear();\n      }\n      throw e;\n    }\n  }\n}\n"],"mappings":"AAAA;AACA,SAASA,OAAO,QAAQ,2BAA2B;AACnD,SAGEC,iBAAiB,QACZ,gCAAgC;AACvC,SAASC,QAAQ,QAAQ,iCAAiC;AAE1D,OAAO,MAAMC,gBAAgB,CAAC;EAG5BC,WAAWA,CAACC,KAAiB,EAAE;IAAA,KAFtBA,KAAK;IAGZ,IAAI,CAACA,KAAK,GAAGA,KAAK;EACpB;AACF;AAEA,OAAO,MAAMC,iBAAiB,CAAC;EAG7BF,WAAWA,CAACG,eAAgC,EAAE;IAAA,KAFtCA,eAAe;IAGrB,IAAI,CAACA,eAAe,GAAGA,eAAe;EACxC;EAEA,MAAMC,KAAKA,CAAA,EAA8B;IACvC,MAAMC,YAAY,GAAGT,OAAO,CAACU,mBAAmB,CAAC,CAAC,IAAI,gBAAgB;IAEtE,IAAI;MAAA,IAAAC,cAAA,EAAAC,qBAAA;MACF,MAAMC,QAAQ,GAAG,MAAM,IAAI,CAACN,eAAe,CAACC,KAAK,CAACC,YAAY,CAAC;MAC/D,MAAMJ,KAAK,IAAAM,cAAA,GAAGE,QAAQ,CAACC,IAAI,cAAAH,cAAA,wBAAAC,qBAAA,GAAbD,cAAA,CAAeI,OAAO,cAAAH,qBAAA,uBAAtBA,qBAAA,CAAwBI,GAAG,CACtCC,IAAS,IACR,IAAIf,QAAQ,CAAC;QACXgB,EAAE,EAAED,IAAI,CAACC,EAAE;QACXC,IAAI,EAAEF,IAAI,CAACE,IAAI;QACfC,IAAI,EAAEH,IAAI,CAACG,IAAI;QACfC,MAAM,EAAEJ,IAAI,CAACI,MAAM;QACnBC,KAAK,EAAEL,IAAI,CAACK;MACd,CAAC,CACL,CAAC;MACDC,OAAO,CAACC,GAAG,CAAC,OAAO,EAAEnB,KAAK,CAAC;MAC3B,OAAO,IAAIF,gBAAgB,CAACE,KAAK,IAAI,EAAE,CAAC;IAC1C,CAAC,CAAC,OAAOoB,CAAC,EAAE;MACV,IAAIA,CAAC,YAAYxB,iBAAiB,EAAE;QAClCD,OAAO,CAAC0B,KAAK,CAAC,CAAC;MACjB;MACA,MAAMD,CAAC;IACT;EACF;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}