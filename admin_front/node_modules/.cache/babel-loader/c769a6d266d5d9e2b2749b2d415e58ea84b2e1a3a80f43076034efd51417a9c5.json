{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { API } from \"../API\";\nimport { UnauthorizedError, UnknownError } from \"./errors\";\nfunction useUserRepository(sessionToken) {\n  _s();\n  const [users, setUsers] = useState(null);\n  const [user, setUser] = useState(null);\n  const [error, setError] = useState(null);\n  const fetchUsers = async () => {\n    try {\n      const response = await fetch(API.createURL(API.URL.users()), {\n        method: \"GET\",\n        headers: generateHeaders(sessionToken)\n      });\n      const data = await handleResponse(response);\n      setUsers(data);\n    } catch (err) {\n      if (err instanceof Error) {\n        setError(err);\n      } else {\n        setError(new UnknownError());\n      }\n    }\n  };\n  const getUser = async userId => {\n    try {\n      const response = await fetch(API.createURL(API.URL.user({\n        userId\n      })), {\n        method: \"GET\",\n        headers: generateHeaders(sessionToken)\n      });\n      const data = await handleResponse(response);\n      setUser(data);\n    } catch (err) {\n      if (err instanceof Error) {\n        setError(err);\n      } else {\n        setError(new UnknownError());\n      }\n    }\n  };\n  const generateHeaders = sessionToken => {\n    return {\n      \"Content-Type\": \"application/json\",\n      \"X-SOEUR-ADMIN-API-Key\": \"hogehoge\",\n      Authorization: `Bearer ${sessionToken}`\n    };\n  };\n  const handleResponse = async response => {\n    if (response.ok) {\n      return await response.json();\n    } else if (response.status === 401) {\n      throw new UnauthorizedError();\n    } else {\n      throw new UnknownError();\n    }\n  };\n  return {\n    users,\n    error,\n    fetchUsers,\n    getUser\n  };\n}\n_s(useUserRepository, \"mcBux8XZuSvoBNFHwFU+szoGQCM=\");\nexport default useUserRepository;","map":{"version":3,"names":["useState","API","UnauthorizedError","UnknownError","useUserRepository","sessionToken","_s","users","setUsers","user","setUser","error","setError","fetchUsers","response","fetch","createURL","URL","method","headers","generateHeaders","data","handleResponse","err","Error","getUser","userId","Authorization","ok","json","status"],"sources":["/usr/src/app/admin_front/src/infrastructure/repositories/UsersRepository.tsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { API } from \"../API\";\nimport { UnauthorizedError, UnknownError } from \"./errors\";\n\ninterface User {\n  id: string;\n  name: string;\n  email: string;\n}\n\nfunction useUserRepository(sessionToken: string | undefined) {\n  const [users, setUsers] = useState<User[] | null>(null);\n  const [user, setUser] = useState<User | null>(null);\n  const [error, setError] = useState<Error | null>(null);\n\n  const fetchUsers = async () => {\n    try {\n      const response = await fetch(API.createURL(API.URL.users()), {\n        method: \"GET\",\n        headers: generateHeaders(sessionToken),\n      });\n      const data = await handleResponse(response);\n      setUsers(data);\n    } catch (err: unknown) {\n      if (err instanceof Error) {\n        setError(err);\n      } else {\n        setError(new UnknownError());\n      }\n    }\n  };\n\n  const getUser = async (userId: string) => {\n    try {\n      const response = await fetch(API.createURL(API.URL.user({ userId })), {\n        method: \"GET\",\n        headers: generateHeaders(sessionToken),\n      });\n      const data = await handleResponse(response);\n      setUser(data);\n    } catch (err: unknown) {\n      if (err instanceof Error) {\n        setError(err);\n      } else {\n        setError(new UnknownError());\n      }\n    }\n  };\n\n  const generateHeaders = (sessionToken: string | undefined) => {\n    return {\n      \"Content-Type\": \"application/json\",\n      \"X-SOEUR-ADMIN-API-Key\": \"hogehoge\",\n      Authorization: `Bearer ${sessionToken}`,\n    };\n  };\n\n  const handleResponse = async (response: Response) => {\n    if (response.ok) {\n      return await response.json();\n    } else if (response.status === 401) {\n      throw new UnauthorizedError();\n    } else {\n      throw new UnknownError();\n    }\n  };\n\n  return { users, error, fetchUsers, getUser };\n}\n\nexport default useUserRepository;\n"],"mappings":";AAAA,SAAgBA,QAAQ,QAAmB,OAAO;AAClD,SAASC,GAAG,QAAQ,QAAQ;AAC5B,SAASC,iBAAiB,EAAEC,YAAY,QAAQ,UAAU;AAQ1D,SAASC,iBAAiBA,CAACC,YAAgC,EAAE;EAAAC,EAAA;EAC3D,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAgB,IAAI,CAAC;EACvD,MAAM,CAACS,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAc,IAAI,CAAC;EACnD,MAAM,CAACW,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAe,IAAI,CAAC;EAEtD,MAAMa,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC7B,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACd,GAAG,CAACe,SAAS,CAACf,GAAG,CAACgB,GAAG,CAACV,KAAK,CAAC,CAAC,CAAC,EAAE;QAC3DW,MAAM,EAAE,KAAK;QACbC,OAAO,EAAEC,eAAe,CAACf,YAAY;MACvC,CAAC,CAAC;MACF,MAAMgB,IAAI,GAAG,MAAMC,cAAc,CAACR,QAAQ,CAAC;MAC3CN,QAAQ,CAACa,IAAI,CAAC;IAChB,CAAC,CAAC,OAAOE,GAAY,EAAE;MACrB,IAAIA,GAAG,YAAYC,KAAK,EAAE;QACxBZ,QAAQ,CAACW,GAAG,CAAC;MACf,CAAC,MAAM;QACLX,QAAQ,CAAC,IAAIT,YAAY,CAAC,CAAC,CAAC;MAC9B;IACF;EACF,CAAC;EAED,MAAMsB,OAAO,GAAG,MAAOC,MAAc,IAAK;IACxC,IAAI;MACF,MAAMZ,QAAQ,GAAG,MAAMC,KAAK,CAACd,GAAG,CAACe,SAAS,CAACf,GAAG,CAACgB,GAAG,CAACR,IAAI,CAAC;QAAEiB;MAAO,CAAC,CAAC,CAAC,EAAE;QACpER,MAAM,EAAE,KAAK;QACbC,OAAO,EAAEC,eAAe,CAACf,YAAY;MACvC,CAAC,CAAC;MACF,MAAMgB,IAAI,GAAG,MAAMC,cAAc,CAACR,QAAQ,CAAC;MAC3CJ,OAAO,CAACW,IAAI,CAAC;IACf,CAAC,CAAC,OAAOE,GAAY,EAAE;MACrB,IAAIA,GAAG,YAAYC,KAAK,EAAE;QACxBZ,QAAQ,CAACW,GAAG,CAAC;MACf,CAAC,MAAM;QACLX,QAAQ,CAAC,IAAIT,YAAY,CAAC,CAAC,CAAC;MAC9B;IACF;EACF,CAAC;EAED,MAAMiB,eAAe,GAAIf,YAAgC,IAAK;IAC5D,OAAO;MACL,cAAc,EAAE,kBAAkB;MAClC,uBAAuB,EAAE,UAAU;MACnCsB,aAAa,EAAG,UAAStB,YAAa;IACxC,CAAC;EACH,CAAC;EAED,MAAMiB,cAAc,GAAG,MAAOR,QAAkB,IAAK;IACnD,IAAIA,QAAQ,CAACc,EAAE,EAAE;MACf,OAAO,MAAMd,QAAQ,CAACe,IAAI,CAAC,CAAC;IAC9B,CAAC,MAAM,IAAIf,QAAQ,CAACgB,MAAM,KAAK,GAAG,EAAE;MAClC,MAAM,IAAI5B,iBAAiB,CAAC,CAAC;IAC/B,CAAC,MAAM;MACL,MAAM,IAAIC,YAAY,CAAC,CAAC;IAC1B;EACF,CAAC;EAED,OAAO;IAAEI,KAAK;IAAEI,KAAK;IAAEE,UAAU;IAAEY;EAAQ,CAAC;AAC9C;AAACnB,EAAA,CA1DQF,iBAAiB;AA4D1B,eAAeA,iBAAiB"},"metadata":{},"sourceType":"module","externalDependencies":[]}