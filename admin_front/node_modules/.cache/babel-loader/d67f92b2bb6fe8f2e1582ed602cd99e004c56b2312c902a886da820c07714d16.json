{"ast":null,"code":"import { Storage } from \"../infrastructure/Storage\";\nimport { InvlalidSessionTokenError, UnauthorizedError, UsersRepository } from \"../infrastructure/repositories\";\nimport { UserItem } from \"../models/presentation/UserItem\";\nexport class FetchUsersInput {}\nexport class FetchUsersOutput {\n  constructor(params) {\n    this.users = void 0;\n    this.users = params.users;\n  }\n}\nexport class FetchUsersUsecase {\n  fetch() {\n    const sessionToken = Storage.restoreSessionToken();\n    console.log(\"Session token:\", sessionToken);\n    if (!sessionToken) {\n      return Promise.reject(new InvlalidSessionTokenError());\n    }\n    return new UsersRepository().fetch(sessionToken).then(data => {\n      if (!data || !data.results || !Array.isArray(data.results)) {\n        throw new Error(\"APIからのデータ形式が無効です。\");\n      }\n      return new FetchUsersOutput({\n        users: data.results.map(user => {\n          const names = user.name ? user.name.split(\" \") : [];\n          return new UserItem({\n            id: user.id,\n            firstName: names[0] || \"\",\n            lastName: names[1] || \"\",\n            attribute: user.status,\n            email: user.email\n          });\n        })\n      });\n    }).catch(e => {\n      if (e instanceof UnauthorizedError) {\n        Storage.clear();\n      }\n      throw e;\n    });\n  }\n}","map":{"version":3,"names":["Storage","InvlalidSessionTokenError","UnauthorizedError","UsersRepository","UserItem","FetchUsersInput","FetchUsersOutput","constructor","params","users","FetchUsersUsecase","fetch","sessionToken","restoreSessionToken","console","log","Promise","reject","then","data","results","Array","isArray","Error","map","user","names","name","split","id","firstName","lastName","attribute","status","email","catch","e","clear"],"sources":["/usr/src/app/admin_front/src/usecases/FetchUsersUsecase.tsx"],"sourcesContent":["import { Storage } from \"../infrastructure/Storage\";\nimport {\n  InvlalidSessionTokenError,\n  UnauthorizedError,\n  UsersRepository,\n} from \"../infrastructure/repositories\";\nimport { UserItem } from \"../models/presentation/UserItem\";\n\nexport class FetchUsersInput {}\n\nexport class FetchUsersOutput {\n  readonly users: UserItem[];\n\n  constructor(params: { users: UserItem[] }) {\n    this.users = params.users;\n  }\n}\n\nexport class FetchUsersUsecase {\n  fetch(): Promise<FetchUsersOutput> {\n    const sessionToken = Storage.restoreSessionToken();\n    console.log(\"Session token:\", sessionToken);\n    if (!sessionToken) {\n      return Promise.reject(new InvlalidSessionTokenError());\n    }\n\n    return new UsersRepository()\n      .fetch(sessionToken)\n      .then((data) => {\n        if (!data || !data.results || !Array.isArray(data.results)) {\n          throw new Error(\"APIからのデータ形式が無効です。\");\n        }\n\n        return new FetchUsersOutput({\n          users: data.results.map((user: any) => {\n            const names = user.name ? user.name.split(\" \") : [];\n            return new UserItem({\n              id: user.id,\n              firstName: names[0] || \"\",\n              lastName: names[1] || \"\",\n              attribute: user.status,\n              email: user.email,\n            });\n          }),\n        });\n      })\n      .catch((e) => {\n        if (e instanceof UnauthorizedError) {\n          Storage.clear();\n        }\n        throw e;\n      });\n  }\n}\n"],"mappings":"AAAA,SAASA,OAAO,QAAQ,2BAA2B;AACnD,SACEC,yBAAyB,EACzBC,iBAAiB,EACjBC,eAAe,QACV,gCAAgC;AACvC,SAASC,QAAQ,QAAQ,iCAAiC;AAE1D,OAAO,MAAMC,eAAe,CAAC;AAE7B,OAAO,MAAMC,gBAAgB,CAAC;EAG5BC,WAAWA,CAACC,MAA6B,EAAE;IAAA,KAFlCC,KAAK;IAGZ,IAAI,CAACA,KAAK,GAAGD,MAAM,CAACC,KAAK;EAC3B;AACF;AAEA,OAAO,MAAMC,iBAAiB,CAAC;EAC7BC,KAAKA,CAAA,EAA8B;IACjC,MAAMC,YAAY,GAAGZ,OAAO,CAACa,mBAAmB,CAAC,CAAC;IAClDC,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEH,YAAY,CAAC;IAC3C,IAAI,CAACA,YAAY,EAAE;MACjB,OAAOI,OAAO,CAACC,MAAM,CAAC,IAAIhB,yBAAyB,CAAC,CAAC,CAAC;IACxD;IAEA,OAAO,IAAIE,eAAe,CAAC,CAAC,CACzBQ,KAAK,CAACC,YAAY,CAAC,CACnBM,IAAI,CAAEC,IAAI,IAAK;MACd,IAAI,CAACA,IAAI,IAAI,CAACA,IAAI,CAACC,OAAO,IAAI,CAACC,KAAK,CAACC,OAAO,CAACH,IAAI,CAACC,OAAO,CAAC,EAAE;QAC1D,MAAM,IAAIG,KAAK,CAAC,mBAAmB,CAAC;MACtC;MAEA,OAAO,IAAIjB,gBAAgB,CAAC;QAC1BG,KAAK,EAAEU,IAAI,CAACC,OAAO,CAACI,GAAG,CAAEC,IAAS,IAAK;UACrC,MAAMC,KAAK,GAAGD,IAAI,CAACE,IAAI,GAAGF,IAAI,CAACE,IAAI,CAACC,KAAK,CAAC,GAAG,CAAC,GAAG,EAAE;UACnD,OAAO,IAAIxB,QAAQ,CAAC;YAClByB,EAAE,EAAEJ,IAAI,CAACI,EAAE;YACXC,SAAS,EAAEJ,KAAK,CAAC,CAAC,CAAC,IAAI,EAAE;YACzBK,QAAQ,EAAEL,KAAK,CAAC,CAAC,CAAC,IAAI,EAAE;YACxBM,SAAS,EAAEP,IAAI,CAACQ,MAAM;YACtBC,KAAK,EAAET,IAAI,CAACS;UACd,CAAC,CAAC;QACJ,CAAC;MACH,CAAC,CAAC;IACJ,CAAC,CAAC,CACDC,KAAK,CAAEC,CAAC,IAAK;MACZ,IAAIA,CAAC,YAAYlC,iBAAiB,EAAE;QAClCF,OAAO,CAACqC,KAAK,CAAC,CAAC;MACjB;MACA,MAAMD,CAAC;IACT,CAAC,CAAC;EACN;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}