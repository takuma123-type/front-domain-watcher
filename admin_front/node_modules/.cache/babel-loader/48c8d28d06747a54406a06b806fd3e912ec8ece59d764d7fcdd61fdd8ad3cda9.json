{"ast":null,"code":"import { b as t } from \"./chunk-DFUGJHJ2.mjs\";\nimport { j as e, k as r } from \"./chunk-HXJ5NQSR.mjs\";\nvar o = [\"074## ######\", \"075## ######\", \"076## ######\", \"077## ######\", \"078## ######\", \"079## ######\"];\nvar b = {\n    formats: o\n  },\n  n = b;\nvar a = [\"ac.uk\", \"biz\", \"co\", \"co.uk\", \"com\", \"cymru\", \"gov.uk\", \"info\", \"london\", \"ltd.uk\", \"me.uk\", \"name\", \"nhs.uk\", \"org.uk\", \"plc.uk\", \"sch.uk\", \"scot\", \"uk\", \"wales\"];\nvar W = {\n    domain_suffix: a\n  },\n  i = W;\nvar s = [\"###\", \"##\", \"#\"];\nvar l = [\"-under-\", \"-over-\", \"-le-\", \"-upon-\", \"-on-\"];\nvar m = [\"{{location.city_prefix}} {{person.last_name}}{{location.city_suffix}}\", \"{{location.city_prefix}} {{person.last_name}}\", \"{{person.last_name}}{{location.city_suffix}}\", \"{{person.last_name}}{{location.city_infix}}{{person.last_name}}\"];\nvar f = [\"Great\", \"Little\", \"St.\", \"West\", \"East\", \"North\", \"South\", \"Upper\", \"Lower\", \"Old\", \"Long\", \"New\", \"High\", \"Nether\", \"Castle\", \"Upton\", \"Newton\"];\nvar p = [\"ton\", \"ham\", \"ley\", \"ington\", \"ford\", \"field\", \"bury\", \"don\", \"ing\", \"worth\", \"well\", \"ingham\", \"wood\", \"ridge\", \"borough\", \"stone\", \"hill\", \"thorpe\", \"hampton\", \"wick\", \" Green\", \" Park\", \" Hill\", \" Court\", \" Heath\", \" Bridge\", \" End\", \" Common\", \" Place\", \" Cross\", \" Gardens\"];\nvar d = [\"Avon\", \"Bedfordshire\", \"Berkshire\", \"Borders\", \"Buckinghamshire\", \"Cambridgeshire\", \"Central\", \"Cheshire\", \"Cleveland\", \"Clwyd\", \"Cornwall\", \"County Antrim\", \"County Armagh\", \"County Down\", \"County Fermanagh\", \"County Londonderry\", \"County Tyrone\", \"Cumbria\", \"Derbyshire\", \"Devon\", \"Dorset\", \"Dumfries and Galloway\", \"Durham\", \"Dyfed\", \"East Sussex\", \"Essex\", \"Fife\", \"Gloucestershire\", \"Grampian\", \"Greater Manchester\", \"Gwent\", \"Gwynedd County\", \"Hampshire\", \"Herefordshire\", \"Hertfordshire\", \"Highlands and Islands\", \"Humberside\", \"Isle of Wight\", \"Kent\", \"Lancashire\", \"Leicestershire\", \"Lincolnshire\", \"Lothian\", \"Merseyside\", \"Mid Glamorgan\", \"Norfolk\", \"North Yorkshire\", \"Northamptonshire\", \"Northumberland\", \"Nottinghamshire\", \"Oxfordshire\", \"Powys\", \"Rutland\", \"Shropshire\", \"Somerset\", \"South Glamorgan\", \"South Yorkshire\", \"Staffordshire\", \"Strathclyde\", \"Suffolk\", \"Surrey\", \"Tayside\", \"Tyne and Wear\", \"Warwickshire\", \"West Glamorgan\", \"West Midlands\", \"West Sussex\", \"West Yorkshire\", \"Wiltshire\", \"Worcestershire\"];\nvar u = [\"England\", \"Scotland\", \"Wales\", \"Northern Ireland\"];\nvar h = [\"??# #??\", \"??## #??\"];\nvar c = [\"England\", \"Northern Ireland\", \"Scotland\", \"Wales\"];\nvar y = [\"ENG\", \"NIR\", \"SCT\", \"WLS\"];\nvar x = [\"{{person.firstName}} {{location.street_suffix}}\", \"{{person.lastName}} {{location.street_suffix}}\"];\nvar _ = [\"Road\", \"Close\", \"Street\", \"Lane\", \"Avenue\", \"Drive\", \"Way\", \"Place\", \"Court\", \"Gardens\", \"Crescent\", \"Grove\", \"Terrace\", \"Hill\", \"View\", \"Walk\", \"Park\", \"Mews\", \"Rise\", \"Green\", \"Square\", \"Croft\", \"Bank\", \"Row\", \"Meadow\", \"Gate\", \"End\", \"Drove\", \"Mead\", \"Field\", \"Chase\", \"Mount\", \"Meadows\", \"Orchard\", \"Fields\", \"Yard\", \"Garth\", \"Fold\", \"Wynd\", \"Parade\", \"Vale\", \"Brae\", \"Grange\", \"Approach\", \"Wood\", \"Paddock\", \"Brow\", \"Lea\", \"Path\", \"Side\", \"Heights\", \"Copse\", \"Corner\", \"Ridge\", \"Glade\"];\nvar B = {\n    building_number: s,\n    city_infix: l,\n    city_pattern: m,\n    city_prefix: f,\n    city_suffix: p,\n    county: d,\n    default_country: u,\n    postcode: h,\n    state: c,\n    state_abbr: y,\n    street_pattern: x,\n    street_suffix: _\n  },\n  g = B;\nvar L = {\n    title: \"English (Great Britain)\",\n    code: \"en_GB\",\n    country: \"GB\",\n    language: \"en\",\n    endonym: \"English (Great Britain)\",\n    dir: \"ltr\",\n    script: \"Latn\"\n  },\n  C = L;\nvar w = [{\n  value: \"{{person.last_name}}\",\n  weight: 9\n}, {\n  value: \"{{person.last_name}}-{{person.last_name}}\",\n  weight: 1\n}];\nvar k = [{\n  value: \"{{person.firstName}} {{person.lastName}}\",\n  weight: 7\n}, {\n  value: \"{{person.prefix}} {{person.firstName}} {{person.lastName}}\",\n  weight: 1\n}];\nvar P = {\n    last_name_pattern: w,\n    name: k\n  },\n  G = P;\nvar D = [\"01#### #####\", \"01### ######\", \"01#1 ### ####\", \"011# ### ####\", \"02# #### ####\", \"03## ### ####\", \"055 #### ####\", \"056 #### ####\", \"0800 ### ####\", \"08## ### ####\", \"09## ### ####\", \"016977 ####\", \"01### #####\", \"0500 ######\", \"0800 ######\"];\nvar v = {\n    formats: D\n  },\n  N = v;\nvar M = {\n    cell_phone: n,\n    internet: i,\n    location: g,\n    metadata: C,\n    person: G,\n    phone_number: N\n  },\n  S = M;\nvar Pe = new e({\n  locale: [S, t, r]\n});\nexport { S as a, Pe as b };","map":{"version":3,"names":["b","t","j","e","k","r","o","formats","n","a","W","domain_suffix","i","s","l","m","f","p","d","u","h","c","y","x","_","B","building_number","city_infix","city_pattern","city_prefix","city_suffix","county","default_country","postcode","state","state_abbr","street_pattern","street_suffix","g","L","title","code","country","language","endonym","dir","script","C","w","value","weight","P","last_name_pattern","name","G","D","v","N","M","cell_phone","internet","location","metadata","person","phone_number","S","Pe","locale"],"sources":["/Users/takuma/Desktop/develop/admin_soeur/node_modules/@faker-js/faker/dist/esm/chunk-45FDELXX.mjs"],"sourcesContent":["import{b as t}from\"./chunk-DFUGJHJ2.mjs\";import{j as e,k as r}from\"./chunk-HXJ5NQSR.mjs\";var o=[\"074## ######\",\"075## ######\",\"076## ######\",\"077## ######\",\"078## ######\",\"079## ######\"];var b={formats:o},n=b;var a=[\"ac.uk\",\"biz\",\"co\",\"co.uk\",\"com\",\"cymru\",\"gov.uk\",\"info\",\"london\",\"ltd.uk\",\"me.uk\",\"name\",\"nhs.uk\",\"org.uk\",\"plc.uk\",\"sch.uk\",\"scot\",\"uk\",\"wales\"];var W={domain_suffix:a},i=W;var s=[\"###\",\"##\",\"#\"];var l=[\"-under-\",\"-over-\",\"-le-\",\"-upon-\",\"-on-\"];var m=[\"{{location.city_prefix}} {{person.last_name}}{{location.city_suffix}}\",\"{{location.city_prefix}} {{person.last_name}}\",\"{{person.last_name}}{{location.city_suffix}}\",\"{{person.last_name}}{{location.city_infix}}{{person.last_name}}\"];var f=[\"Great\",\"Little\",\"St.\",\"West\",\"East\",\"North\",\"South\",\"Upper\",\"Lower\",\"Old\",\"Long\",\"New\",\"High\",\"Nether\",\"Castle\",\"Upton\",\"Newton\"];var p=[\"ton\",\"ham\",\"ley\",\"ington\",\"ford\",\"field\",\"bury\",\"don\",\"ing\",\"worth\",\"well\",\"ingham\",\"wood\",\"ridge\",\"borough\",\"stone\",\"hill\",\"thorpe\",\"hampton\",\"wick\",\" Green\",\" Park\",\" Hill\",\" Court\",\" Heath\",\" Bridge\",\" End\",\" Common\",\" Place\",\" Cross\",\" Gardens\"];var d=[\"Avon\",\"Bedfordshire\",\"Berkshire\",\"Borders\",\"Buckinghamshire\",\"Cambridgeshire\",\"Central\",\"Cheshire\",\"Cleveland\",\"Clwyd\",\"Cornwall\",\"County Antrim\",\"County Armagh\",\"County Down\",\"County Fermanagh\",\"County Londonderry\",\"County Tyrone\",\"Cumbria\",\"Derbyshire\",\"Devon\",\"Dorset\",\"Dumfries and Galloway\",\"Durham\",\"Dyfed\",\"East Sussex\",\"Essex\",\"Fife\",\"Gloucestershire\",\"Grampian\",\"Greater Manchester\",\"Gwent\",\"Gwynedd County\",\"Hampshire\",\"Herefordshire\",\"Hertfordshire\",\"Highlands and Islands\",\"Humberside\",\"Isle of Wight\",\"Kent\",\"Lancashire\",\"Leicestershire\",\"Lincolnshire\",\"Lothian\",\"Merseyside\",\"Mid Glamorgan\",\"Norfolk\",\"North Yorkshire\",\"Northamptonshire\",\"Northumberland\",\"Nottinghamshire\",\"Oxfordshire\",\"Powys\",\"Rutland\",\"Shropshire\",\"Somerset\",\"South Glamorgan\",\"South Yorkshire\",\"Staffordshire\",\"Strathclyde\",\"Suffolk\",\"Surrey\",\"Tayside\",\"Tyne and Wear\",\"Warwickshire\",\"West Glamorgan\",\"West Midlands\",\"West Sussex\",\"West Yorkshire\",\"Wiltshire\",\"Worcestershire\"];var u=[\"England\",\"Scotland\",\"Wales\",\"Northern Ireland\"];var h=[\"??# #??\",\"??## #??\"];var c=[\"England\",\"Northern Ireland\",\"Scotland\",\"Wales\"];var y=[\"ENG\",\"NIR\",\"SCT\",\"WLS\"];var x=[\"{{person.firstName}} {{location.street_suffix}}\",\"{{person.lastName}} {{location.street_suffix}}\"];var _=[\"Road\",\"Close\",\"Street\",\"Lane\",\"Avenue\",\"Drive\",\"Way\",\"Place\",\"Court\",\"Gardens\",\"Crescent\",\"Grove\",\"Terrace\",\"Hill\",\"View\",\"Walk\",\"Park\",\"Mews\",\"Rise\",\"Green\",\"Square\",\"Croft\",\"Bank\",\"Row\",\"Meadow\",\"Gate\",\"End\",\"Drove\",\"Mead\",\"Field\",\"Chase\",\"Mount\",\"Meadows\",\"Orchard\",\"Fields\",\"Yard\",\"Garth\",\"Fold\",\"Wynd\",\"Parade\",\"Vale\",\"Brae\",\"Grange\",\"Approach\",\"Wood\",\"Paddock\",\"Brow\",\"Lea\",\"Path\",\"Side\",\"Heights\",\"Copse\",\"Corner\",\"Ridge\",\"Glade\"];var B={building_number:s,city_infix:l,city_pattern:m,city_prefix:f,city_suffix:p,county:d,default_country:u,postcode:h,state:c,state_abbr:y,street_pattern:x,street_suffix:_},g=B;var L={title:\"English (Great Britain)\",code:\"en_GB\",country:\"GB\",language:\"en\",endonym:\"English (Great Britain)\",dir:\"ltr\",script:\"Latn\"},C=L;var w=[{value:\"{{person.last_name}}\",weight:9},{value:\"{{person.last_name}}-{{person.last_name}}\",weight:1}];var k=[{value:\"{{person.firstName}} {{person.lastName}}\",weight:7},{value:\"{{person.prefix}} {{person.firstName}} {{person.lastName}}\",weight:1}];var P={last_name_pattern:w,name:k},G=P;var D=[\"01#### #####\",\"01### ######\",\"01#1 ### ####\",\"011# ### ####\",\"02# #### ####\",\"03## ### ####\",\"055 #### ####\",\"056 #### ####\",\"0800 ### ####\",\"08## ### ####\",\"09## ### ####\",\"016977 ####\",\"01### #####\",\"0500 ######\",\"0800 ######\"];var v={formats:D},N=v;var M={cell_phone:n,internet:i,location:g,metadata:C,person:G,phone_number:N},S=M;var Pe=new e({locale:[S,t,r]});export{S as a,Pe as b};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}