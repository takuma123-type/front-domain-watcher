[{"/usr/src/app/admin_front/src/index.tsx":"1","/usr/src/app/admin_front/src/App.tsx":"2","/usr/src/app/admin_front/src/components/pages/Index.tsx":"3","/usr/src/app/admin_front/src/components/molecules/shared/Header.tsx":"4","/usr/src/app/admin_front/src/components/molecules/users/TableRow.tsx":"5","/usr/src/app/admin_front/src/components/molecules/users/TableHeader.tsx":"6","/usr/src/app/admin_front/src/components/molecules/users/LegendItem.tsx":"7","/usr/src/app/admin_front/src/components/organisms/shared/Pagination.tsx":"8","/usr/src/app/admin_front/src/components/organisms/shared/EditModal.tsx":"9","/usr/src/app/admin_front/src/components/organisms/shared/DeleteModal.tsx":"10","/usr/src/app/admin_front/src/data/test_users.tsx":"11","/usr/src/app/admin_front/src/components/pages/Industries.tsx":"12","/usr/src/app/admin_front/src/data/Occupations_data.tsx":"13","/usr/src/app/admin_front/src/data/industries_test.tsx":"14","/usr/src/app/admin_front/src/components/atoms/Buttons/CreateButton.tsx":"15","/usr/src/app/admin_front/src/components/molecules/occupations/OccupationRow.tsx":"16","/usr/src/app/admin_front/src/components/pages/Occupations.tsx":"17","/usr/src/app/admin_front/src/components/molecules/industries/IndustryRow.tsx":"18","/usr/src/app/admin_front/src/data/Themes_data.tsx":"19","/usr/src/app/admin_front/src/data/users.tsx":"20","/usr/src/app/admin_front/src/data/Events_data.tsx":"21","/usr/src/app/admin_front/src/components/pages/IndustriesCreate.tsx":"22","/usr/src/app/admin_front/src/components/pages/ThemesCreate.tsx":"23","/usr/src/app/admin_front/src/components/pages/EventCreate.tsx":"24","/usr/src/app/admin_front/src/components/pages/Themes.tsx":"25","/usr/src/app/admin_front/src/components/pages/UserDetails.tsx":"26","/usr/src/app/admin_front/src/components/pages/Event.tsx":"27","/usr/src/app/admin_front/src/components/pages/AdminUsers.tsx":"28","/usr/src/app/admin_front/src/components/organisms/userdetails/DetailsView.tsx":"29","/usr/src/app/admin_front/src/components/organisms/userdetails/VerificationView.tsx":"30","/usr/src/app/admin_front/src/components/molecules/events/EventRow.tsx":"31","/usr/src/app/admin_front/src/components/molecules/admin_users/TableRow.tsx":"32","/usr/src/app/admin_front/src/components/pages/SignIn.tsx":"33","/usr/src/app/admin_front/src/components/pages/OccupationsCreate.tsx":"34","/usr/src/app/admin_front/src/components/molecules/admin_users/TableHeader.tsx":"35","/usr/src/app/admin_front/src/components/molecules/themes/ThemeRow.tsx":"36","/usr/src/app/admin_front/src/infrastructure/Storage.ts":"37","/usr/src/app/admin_front/src/infrastructure/API.ts":"38","/usr/src/app/admin_front/src/models/presentation/UserItem.ts":"39","/usr/src/app/admin_front/src/infrastructure/repositories/UsersRepository.ts":"40","/usr/src/app/admin_front/src/infrastructure/repositories/errors.ts":"41","/usr/src/app/admin_front/src/infrastructure/repositories/index.ts":"42","/usr/src/app/admin_front/src/usecases/FetchUsersUsecase.ts":"43","/usr/src/app/admin_front/src/usecases/GetUserDetailUsecase.ts":"44","/usr/src/app/admin_front/src/models/presentation/UserDetailItem.ts":"45"},{"size":397,"mtime":1697273580859,"results":"46","hashOfConfig":"47"},{"size":1661,"mtime":1697344126921,"results":"48","hashOfConfig":"47"},{"size":5339,"mtime":1698575506157,"results":"49","hashOfConfig":"47"},{"size":9239,"mtime":1697299455274,"results":"50","hashOfConfig":"47"},{"size":883,"mtime":1698497675787,"results":"51","hashOfConfig":"47"},{"size":996,"mtime":1697271963040,"results":"52","hashOfConfig":"47"},{"size":989,"mtime":1697271991166,"results":"53","hashOfConfig":"47"},{"size":2940,"mtime":1697272039135,"results":"54","hashOfConfig":"47"},{"size":1667,"mtime":1697302332793,"results":"55","hashOfConfig":"47"},{"size":1328,"mtime":1697343740683,"results":"56","hashOfConfig":"47"},{"size":2022,"mtime":1697304750890,"results":"57","hashOfConfig":"47"},{"size":6145,"mtime":1697303168434,"results":"58","hashOfConfig":"47"},{"size":365,"mtime":1697299717655,"results":"59","hashOfConfig":"47"},{"size":337,"mtime":1697299774662,"results":"60","hashOfConfig":"47"},{"size":1348,"mtime":1697300086526,"results":"61","hashOfConfig":"47"},{"size":2767,"mtime":1697343614077,"results":"62","hashOfConfig":"47"},{"size":6438,"mtime":1697304036536,"results":"63","hashOfConfig":"47"},{"size":2588,"mtime":1697343544423,"results":"64","hashOfConfig":"47"},{"size":333,"mtime":1697304581624,"results":"65","hashOfConfig":"47"},{"size":418,"mtime":1697304607267,"results":"66","hashOfConfig":"47"},{"size":290,"mtime":1697304817818,"results":"67","hashOfConfig":"47"},{"size":2738,"mtime":1697304976795,"results":"68","hashOfConfig":"47"},{"size":2726,"mtime":1697305072468,"results":"69","hashOfConfig":"47"},{"size":3555,"mtime":1697305115463,"results":"70","hashOfConfig":"47"},{"size":6140,"mtime":1697305190085,"results":"71","hashOfConfig":"47"},{"size":3461,"mtime":1698576440617,"results":"72","hashOfConfig":"47"},{"size":4574,"mtime":1697305403945,"results":"73","hashOfConfig":"47"},{"size":2594,"mtime":1698503533329,"results":"74","hashOfConfig":"47"},{"size":4717,"mtime":1698577327114,"results":"75","hashOfConfig":"47"},{"size":839,"mtime":1696494868134,"results":"76","hashOfConfig":"47"},{"size":2330,"mtime":1697343498868,"results":"77","hashOfConfig":"47"},{"size":1093,"mtime":1697306867905,"results":"78","hashOfConfig":"47"},{"size":2553,"mtime":1697304859801,"results":"79","hashOfConfig":"47"},{"size":2671,"mtime":1697304947729,"results":"80","hashOfConfig":"47"},{"size":986,"mtime":1697306890396,"results":"81","hashOfConfig":"47"},{"size":2592,"mtime":1697344341373,"results":"82","hashOfConfig":"47"},{"size":410,"mtime":1698497675788,"results":"83","hashOfConfig":"47"},{"size":337,"mtime":1698564661589,"results":"84","hashOfConfig":"47"},{"size":426,"mtime":1698497675790,"results":"85","hashOfConfig":"47"},{"size":2082,"mtime":1698575600932,"results":"86","hashOfConfig":"47"},{"size":243,"mtime":1698497675789,"results":"87","hashOfConfig":"47"},{"size":61,"mtime":1698497675789,"results":"88","hashOfConfig":"47"},{"size":1392,"mtime":1698570814882,"results":"89","hashOfConfig":"47"},{"size":1637,"mtime":1698577369390,"results":"90","hashOfConfig":"47"},{"size":940,"mtime":1698577254345,"results":"91","hashOfConfig":"47"},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},"164is1z",{"filePath":"96","messages":"97","suppressedMessages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"99","messages":"100","suppressedMessages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"102","messages":"103","suppressedMessages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"95"},{"filePath":"106","messages":"107","suppressedMessages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"109","messages":"110","suppressedMessages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"95"},{"filePath":"113","messages":"114","suppressedMessages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","suppressedMessages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"119","messages":"120","suppressedMessages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"122","messages":"123","suppressedMessages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"125","messages":"126","suppressedMessages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"128","messages":"129","suppressedMessages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"95"},{"filePath":"132","messages":"133","suppressedMessages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"135","messages":"136","suppressedMessages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"138","messages":"139","suppressedMessages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"141","messages":"142","suppressedMessages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"95"},{"filePath":"145","messages":"146","suppressedMessages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"95"},{"filePath":"149","messages":"150","suppressedMessages":"151","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"152","messages":"153","suppressedMessages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"155","messages":"156","suppressedMessages":"157","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"158","messages":"159","suppressedMessages":"160","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"161","messages":"162","suppressedMessages":"163","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"164","messages":"165","suppressedMessages":"166","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"167","messages":"168","suppressedMessages":"169","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"95"},{"filePath":"171","messages":"172","suppressedMessages":"173","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"95"},{"filePath":"175","messages":"176","suppressedMessages":"177","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"178","messages":"179","suppressedMessages":"180","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181","usedDeprecatedRules":"95"},{"filePath":"182","messages":"183","suppressedMessages":"184","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185","usedDeprecatedRules":"95"},{"filePath":"186","messages":"187","suppressedMessages":"188","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"189","messages":"190","suppressedMessages":"191","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192","usedDeprecatedRules":"95"},{"filePath":"193","messages":"194","suppressedMessages":"195","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"196","messages":"197","suppressedMessages":"198","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"199","messages":"200","suppressedMessages":"201","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"202","messages":"203","suppressedMessages":"204","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"205","usedDeprecatedRules":"95"},{"filePath":"206","messages":"207","suppressedMessages":"208","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209","usedDeprecatedRules":"95"},{"filePath":"210","messages":"211","suppressedMessages":"212","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"213","usedDeprecatedRules":"95"},{"filePath":"214","messages":"215","suppressedMessages":"216","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"217","messages":"218","suppressedMessages":"219","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"220","messages":"221","suppressedMessages":"222","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"223","messages":"224","suppressedMessages":"225","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"226","messages":"227","suppressedMessages":"228","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"229","messages":"230","suppressedMessages":"231","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"232","messages":"233","suppressedMessages":"234","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"235"},{"filePath":"236","messages":"237","suppressedMessages":"238","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"239","messages":"240","suppressedMessages":"241","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/usr/src/app/admin_front/src/index.tsx",[],[],["242"],"/usr/src/app/admin_front/src/App.tsx",[],[],"/usr/src/app/admin_front/src/components/pages/Index.tsx",["243","244","245","246","247","248"],[],"/usr/src/app/admin_front/src/components/molecules/shared/Header.tsx",["249"],[],"import React, { useState, useEffect } from \"react\";\nimport { useLocation, Link } from \"react-router-dom\";\n\nconst Header: React.FC = () => {\n  const [menuVisible, setMenuVisible] = useState<boolean>(false);\n  const location = useLocation();\n\n  const toggleMenu = () => {\n    setMenuVisible((prevVisible) => !prevVisible);\n  };\n\n  useEffect(() => {\n    const burger = document.querySelector(\".navbar-burger\");\n    const close = document.querySelector(\".navbar-close\");\n    const backdrop = document.querySelector(\".navbar-backdrop\");\n\n    if (burger) burger.addEventListener(\"click\", toggleMenu);\n    if (close) close.addEventListener(\"click\", toggleMenu);\n    if (backdrop) backdrop.addEventListener(\"click\", toggleMenu);\n\n    return () => {\n      if (burger) burger.removeEventListener(\"click\", toggleMenu);\n      if (close) close.removeEventListener(\"click\", toggleMenu);\n      if (backdrop) backdrop.removeEventListener(\"click\", toggleMenu);\n    };\n  }, []);\n\n  const isActive = (path: string): string => {\n    return location.pathname.startsWith(path)\n      ? \"text-neutral-600\"\n      : \"text-neutral-400\";\n  };\n\n  return (\n    <section className=\"overflow-hidden\">\n      <nav className=\"flex items-center justify-between py-3.5 px-7 bg-neutral-50\">\n        <div className=\"w-full xl:w-auto px-2 xl:mr-10\">\n          <div className=\"flex items-center justify-between\">\n            <Link className=\"inline-flex items-center h-7\" to=\"/\">\n              Soeur管理者画面\n            </Link>\n            <div className=\"xl:hidden\">\n              <button className=\"navbar-burger text-gray-400 hover:text-gray-300 focus:outline-none\">\n                <svg\n                  width={20}\n                  height={12}\n                  viewBox=\"0 0 20 12\"\n                  fill=\"none\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                >\n                  <path\n                    d=\"M1 2H19C19.2652 2 19.5196 1.89464 19.7071 1.70711C19.8946 1.51957 20 1.26522 20 1C20 0.734784 19.8946 0.48043 19.7071 0.292893C19.5196 0.105357 19.2652 0 19 0H1C0.734784 0 0.48043 0.105357 0.292893 0.292893C0.105357 0.48043 0 0.734784 0 1C0 1.26522 0.105357 1.51957 0.292893 1.70711C0.48043 1.89464 0.734784 2 1 2ZM19 10H1C0.734784 10 0.48043 10.1054 0.292893 10.2929C0.105357 10.4804 0 10.7348 0 11C0 11.2652 0.105357 11.5196 0.292893 11.7071C0.48043 11.8946 0.734784 12 1 12H19C19.2652 12 19.5196 11.8946 19.7071 11.7071C19.8946 11.5196 20 11.2652 20 11C20 10.7348 19.8946 10.4804 19.7071 10.2929C19.5196 10.1054 19.2652 10 19 10ZM19 5H1C0.734784 5 0.48043 5.10536 0.292893 5.29289C0.105357 5.48043 0 5.73478 0 6C0 6.26522 0.105357 6.51957 0.292893 6.70711C0.48043 6.89464 0.734784 7 1 7H19C19.2652 7 19.5196 6.89464 19.7071 6.70711C19.8946 6.51957 20 6.26522 20 6C20 5.73478 19.8946 5.48043 19.7071 5.29289C19.5196 5.10536 19.2652 5 19 5Z\"\n                    fill=\"currentColor\"\n                  />\n                </svg>\n              </button>\n            </div>\n          </div>\n        </div>\n        <div className=\"hidden xl:block w-full md:w-auto px-2 mr-auto\">\n          <ul className=\"flex items-center\">\n            <li className=\"mr-10\">\n              <Link className={`text-sm font-medium ${isActive(\"/\")}`} to=\"/\">\n                ユーザ一覧\n              </Link>\n            </li>\n            <li className=\"mr-10\">\n              <Link\n                className={`text-sm font-medium ${isActive(\"/industries\")}`}\n                to=\"/industries\"\n              >\n                業種一覧\n              </Link>\n            </li>\n            <li className=\"mr-10\">\n              <Link\n                className={`text-sm font-medium ${isActive(\"/occupations\")}`}\n                to=\"/occupations\"\n              >\n                職種一覧\n              </Link>\n            </li>\n            <li className=\"mr-10\">\n              <Link\n                className={`text-sm font-medium ${isActive(\"/themes\")}`}\n                to=\"/themes\"\n              >\n                テーマ一覧\n              </Link>\n            </li>\n            <li className=\"mr-10\">\n              <Link\n                className={`text-sm font-medium ${isActive(\"/event\")}`}\n                to=\"/event\"\n              >\n                イベント通知一覧\n              </Link>\n            </li>\n\n            <li className=\"mr-10\">\n              <Link\n                className={`text-sm font-medium ${isActive(\"/admin_users\")}`}\n                to=\"/admin_users\"\n              >\n                管理者ユーザ一覧\n              </Link>\n            </li>\n            <li className=\"mr-10\">\n              <Link\n                className={`text-sm font-medium ${isActive(\"/logout\")}`}\n                to=\"/logout\"\n              >\n                ログアウト\n              </Link>\n            </li>\n          </ul>\n        </div>\n        <div className=\"hidden xl:block w-full md:w-auto px-2\">\n          <div className=\"md:flex items-center\">\n            <div className=\"w-full md:w-auto mb-6 md:mb-0\">\n              <div\n                className=\"flex flex-wrap items-center\"\n                contentEditable=\"false\"\n              >\n                <a href=\"#\">\n                  <svg\n                    width={12}\n                    height={7}\n                    viewBox=\"0 0 12 7\"\n                    fill=\"none\"\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                  />\n                </a>\n              </div>\n            </div>\n          </div>\n        </div>\n      </nav>\n      <div\n        className={`navbar-menu fixed top-0 left-0 bottom-0 z-50 ${\n          menuVisible ? \"\" : \"hidden\"\n        }`}\n      >\n        <div className=\"navbar-backdrop fixed top-0 left-0 w-full h-full bg-gray-800 opacity-50\" />\n        <nav className=\"fixed w-full h-full max-w-xss bg-white\">\n          <div className=\"py-6 h-full overflow-y-auto\">\n            <div className=\"flex flex-col flex-wrap px-7 -m-2.5\">\n              <div className=\"w-auto p-2.5\">\n                <Link className=\"flex flex-wrap items-center\" to=\"/\">\n                  <img\n                    className=\"mr-3\"\n                    src=\"dashy-assets/images/home-2.svg\"\n                    alt=\"\"\n                  />\n                  <p className=\"hover:text-neutral-700 font-medium\">\n                    ユーザ一覧\n                  </p>\n                </Link>\n              </div>\n              <div className=\"w-auto p-2.5\">\n                <Link className=\"flex flex-wrap items-center\" to=\"/industries\">\n                  <img\n                    className=\"mr-3\"\n                    src=\"dashy-assets/images/loader-rec.svg\"\n                    alt=\"\"\n                  />\n                  <p className=\"hover:text-neutral-700 font-medium\">業種一覧</p>\n                </Link>\n              </div>\n              <div className=\"w-auto p-2.5\">\n                <Link className=\"flex flex-wrap items-center\" to=\"/occupations\">\n                  <img\n                    className=\"mr-3\"\n                    src=\"dashy-assets/images/lifebuoy.svg\"\n                    alt=\"\"\n                  />\n                  <p className=\"hover:text-neutral-700 font-medium\">職種一覧</p>\n                </Link>\n              </div>\n              <div className=\"w-auto p-2.5\">\n                <Link className=\"flex flex-wrap items-center\" to=\"/themes\">\n                  <img\n                    className=\"mr-3\"\n                    src=\"dashy-assets/images/folder-open.svg\"\n                    alt=\"\"\n                  />\n                  <p className=\"hover:text-neutral-700 font-medium\">\n                    テーマ一覧\n                  </p>\n                </Link>\n              </div>\n              <div className=\"w-auto p-2.5\">\n                <Link className=\"flex flex-wrap items-center\" to=\"/event\">\n                  <img\n                    className=\"mr-3\"\n                    src=\"dashy-assets/images/user-circle.svg\"\n                    alt=\"\"\n                  />\n                  <p className=\"hover:text-neutral-700 font-medium\">\n                    イベント通知一覧\n                  </p>\n                </Link>\n              </div>\n              <div className=\"w-auto p-2.5\">\n                <Link className=\"flex flex-wrap items-center\" to=\"/admin_users\">\n                  <img\n                    className=\"mr-3\"\n                    src=\"dashy-assets/images/link-2-rec.svg\"\n                    alt=\"\"\n                  />\n                  <p className=\"hover:text-neutral-700 font-medium\">\n                    管理者ユーザ一覧\n                  </p>\n                </Link>\n              </div>\n              <div className=\"w-auto p-2.5\">\n                <Link className=\"flex flex-wrap items-center\" to=\"/logout\">\n                  <img\n                    className=\"mr-3\"\n                    src=\"dashy-assets/images/list-unordered-3-rec.svg\"\n                    alt=\"\"\n                  />\n                  <p className=\"hover:text-neutral-700 font-medium\">\n                    ログアウト\n                  </p>\n                </Link>\n              </div>\n            </div>\n          </div>\n        </nav>\n      </div>\n    </section>\n  );\n};\n\nexport default Header;\n","/usr/src/app/admin_front/src/components/molecules/users/TableRow.tsx",[],[],"/usr/src/app/admin_front/src/components/molecules/users/TableHeader.tsx",["250"],[],"import React from \"react\";\n\ninterface Props {\n  label: string;\n}\n\nconst TableHeader: React.FC<Props> = ({ label }) => (\n  <th className=\"pb-3.5 border-b border-neutral-100 whitespace-nowrap\">\n    <a\n      className=\"inline-flex items-center text-sm text-gray-500 font-medium uppercase\"\n      href=\"#\"\n    >\n      <span className=\"mr-1.5\">{label}</span>\n      <svg\n        width={18}\n        height={18}\n        viewBox=\"0 0 18 18\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n      >\n        <path\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n          d=\"M4.7636 6.56365C5.11508 6.21218 5.68492 6.21218 6.0364 6.56365L9 9.52726L11.9636 6.56365C12.3151 6.21218 12.8849 6.21218 13.2364 6.56365C13.5879 6.91512 13.5879 7.48497 13.2364 7.83645L9.6364 11.4364C9.28492 11.7879 8.71508 11.7879 8.3636 11.4364L4.7636 7.83645C4.41213 7.48497 4.41213 6.91512 4.7636 6.56365Z\"\n          fill=\"#7F8995\"\n        />\n      </svg>\n    </a>\n  </th>\n);\n\nexport default TableHeader;\n","/usr/src/app/admin_front/src/components/molecules/users/LegendItem.tsx",[],[],"/usr/src/app/admin_front/src/components/organisms/shared/Pagination.tsx",[],[],"/usr/src/app/admin_front/src/components/organisms/shared/EditModal.tsx",[],[],"/usr/src/app/admin_front/src/components/organisms/shared/DeleteModal.tsx",[],[],"/usr/src/app/admin_front/src/data/test_users.tsx",[],[],"/usr/src/app/admin_front/src/components/pages/Industries.tsx",["251","252","253","254"],[],"import React, { useState, useEffect, useMemo } from \"react\";\nimport { Helmet, HelmetProvider } from \"react-helmet-async\";\nimport Header from \"../molecules/shared/Header\";\nimport IndustryRow from \"../molecules/industries/IndustryRow\";\nimport industriesData from \"../../data/industries_test\";\nimport CreateButton from \"../atoms/Buttons/CreateButton\";\nimport Pagination from \"../organisms/shared/Pagination\";\n\ninterface Industry {\n  id: number;\n  name: string;\n  registeredUsers: number;\n}\n\nconst meta = {\n  title: \"\",\n  meta: [],\n  link: [],\n  style: [],\n  script: [],\n};\n\nexport default function Industries() {\n  const [industries, setIndustries] = useState<Industry[]>(industriesData);\n  const [searchQuery, setSearchQuery] = useState<string>(\"\");\n  const [currentPage, setCurrentPage] = useState<number>(1);\n  const industriesPerPage: number = 5;\n\n  const memoizedIndustries: Industry[] = useMemo(() => {\n    return industries.filter((industry) => industry.name.includes(searchQuery));\n  }, [industries, searchQuery]);\n\n  const indexOfLastIndustry: number = currentPage * industriesPerPage;\n  const indexOfFirstIndustry: number = indexOfLastIndustry - industriesPerPage;\n  const currentIndustries: Industry[] = memoizedIndustries.slice(\n    indexOfFirstIndustry,\n    indexOfLastIndustry\n  );\n  const totalPages: number = Math.ceil(\n    memoizedIndustries.length / industriesPerPage\n  );\n\n  return (\n    <React.Fragment>\n      <HelmetProvider>\n        <Helmet {...meta}></Helmet>\n      </HelmetProvider>\n      <>\n        <Header />\n        <section className=\"py-4 overflow-hidden\">\n          <div className=\"container px-4 mx-auto\">\n            <div className=\"pt-5 pb-7 bg-neutral-50 border border-neutral-100 rounded-xl\">\n              <div className=\"px-6\">\n                <div className=\"flex flex-wrap items-center justify-between -m-2 mb-5\">\n                  <div className=\"w-auto p-2\">\n                    <h3 className=\"font-heading text-lg text-neutral-600 font-semibold\">\n                      業種一覧\n                      <input\n                        className=\"pl-2 py-3 text-sm text-gray-200 border ml-2.5\"\n                        type=\"text\"\n                        placeholder=\"業種検索\"\n                        value={searchQuery}\n                        onChange={(e) => setSearchQuery(e.target.value)}\n                      />\n                    </h3>\n                  </div>\n                  <div>\n                    <CreateButton link=\"/industries/new\" />\n                  </div>\n                </div>\n                <div className=\"mb-12 w-full overflow-x-auto\">\n                  <table className=\"w-full min-w-max\">\n                    <thead>\n                      <tr className=\"text-left\">\n                        <th className=\"p-0 whitespace-nowrap\">\n                          <div className=\"pb-3.5\">\n                            <a className=\"inline-flex items-center\" href=\"#\">\n                              <span className=\"mr-2.5 text-sm text-gray-400 font-medium\">\n                                業種名\n                              </span>\n                              <svg\n                                width={18}\n                                height={18}\n                                viewBox=\"0 0 18 18\"\n                                fill=\"none\"\n                                xmlns=\"http://www.w3.org/2000/svg\"\n                              >\n                                <path\n                                  fillRule=\"evenodd\"\n                                  clipRule=\"evenodd\"\n                                  d=\"M4.7636 6.5636C5.11508 6.21213 5.68492 6.21213 6.0364 6.5636L9 9.52721L11.9636 6.5636C12.3151 6.21213 12.8849 6.21213 13.2364 6.5636C13.5879 6.91508 13.5879 7.48492 13.2364 7.8364L9.6364 11.4364C9.28492 11.7879 8.71508 11.7879 8.3636 11.4364L4.7636 7.8364C4.41213 7.48492 4.41213 6.91508 4.7636 6.5636Z\"\n                                  fill=\"#7F8995\"\n                                />\n                              </svg>\n                            </a>\n                          </div>\n                        </th>\n                        <th className=\"p-0 whitespace-nowrap\">\n                          <div className=\"pb-3.5\">\n                            <a className=\"inline-flex items-center\" href=\"#\">\n                              <span className=\"mr-2.5 text-sm text-gray-400 font-medium\">\n                                業種の登録者\n                              </span>\n                              <svg\n                                width={18}\n                                height={18}\n                                viewBox=\"0 0 18 18\"\n                                fill=\"none\"\n                                xmlns=\"http://www.w3.org/2000/svg\"\n                              >\n                                <path\n                                  fillRule=\"evenodd\"\n                                  clipRule=\"evenodd\"\n                                  d=\"M4.7636 6.5636C5.11508 6.21213 5.68492 6.21213 6.0364 6.5636L9 9.52721L11.9636 6.5636C12.3151 6.21213 12.8849 6.21213 13.2364 6.5636C13.5879 6.91508 13.5879 7.48492 13.2364 7.8364L9.6364 11.4364C9.28492 11.7879 8.71508 11.7879 8.3636 11.4364L4.7636 7.8364C4.41213 7.48492 4.41213 6.91508 4.7636 6.5636Z\"\n                                  fill=\"#7F8995\"\n                                />\n                              </svg>\n                            </a>\n                          </div>\n                        </th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      {currentIndustries.map((industry: Industry) => (\n                        <IndustryRow key={industry.id} industry={industry} />\n                      ))}\n                    </tbody>\n                  </table>\n                </div>\n                <Pagination\n                  currentPage={currentPage}\n                  totalPages={totalPages}\n                  onPageChange={setCurrentPage}\n                />\n              </div>\n            </div>\n          </div>\n        </section>\n      </>\n    </React.Fragment>\n  );\n}\n","/usr/src/app/admin_front/src/data/Occupations_data.tsx",[],[],"/usr/src/app/admin_front/src/data/industries_test.tsx",[],[],"/usr/src/app/admin_front/src/components/atoms/Buttons/CreateButton.tsx",[],[],"/usr/src/app/admin_front/src/components/molecules/occupations/OccupationRow.tsx",["255"],[],"import React, { useState } from \"react\";\nimport DeleteModal from \"../../organisms/shared/DeleteModal\";\nimport EditModal from \"../../organisms/shared/EditModal\";\n\ninterface Occupation {\n  id: number;\n  name: string;\n  registrants: number;\n}\n\ninterface OccupationRowProps {\n  occupation: Occupation;\n}\n\nconst OccupationRow: React.FC<OccupationRowProps> = ({ occupation }) => {\n  const [isModalVisible, setIsModalVisible] = useState<boolean>(false);\n  const [isEditModalVisible, setIsEditModalVisible] = useState<boolean>(false);\n  const [editValue, setEditValue] = useState<string>(occupation.name);\n\n  const handleDeleteClick = (): void => {\n    setIsModalVisible(true);\n  };\n\n  const handleModalCancel = (): void => {\n    setIsModalVisible(false);\n  };\n\n  const handleModalConfirm = (): void => {\n    setIsModalVisible(false);\n  };\n\n  const handleEditClick = (): void => {\n    setIsEditModalVisible(true);\n  };\n\n  const handleEditModalCancel = (): void => {\n    setIsEditModalVisible(false);\n  };\n\n  const handleEditModalConfirm = (value: string): void => {\n    setEditValue(value);\n    setIsEditModalVisible(false);\n  };\n\n  const handleDeleteModalConfirm = (): void => {\n    setIsModalVisible(false);\n    console.log(`Delete ${occupation.name}`);\n  };\n\n  return (\n    <tr>\n      <td className=\"py-3 pr-4 whitespace-nowrap\">\n        <div className=\"flex flex-wrap items-center\">\n          <span\n            className=\"font-semibold cursor-pointer\"\n            onClick={handleEditClick}\n          >\n            {editValue}\n          </span>\n        </div>\n      </td>\n      <td className=\"py-3 pr-4\">\n        <span className=\"font-medium\">{occupation.registrants}人</span>\n      </td>\n      <td className=\"py-3 pr-4\">\n        <span\n          className=\"px-2.5 py-1 text-sm font-medium bg-opacity-10 rounded-full text-blue-900 bg-blue-900 cursor-pointer\"\n          onClick={handleEditClick}\n        >\n          編集\n        </span>\n      </td>\n      <td className=\"flex justify-end py-3 pr-4\">\n        <span\n          className=\"px-2.5 py-1 text-sm font-medium bg-opacity-10 rounded-full text-red-900 bg-red-900 cursor-pointer\"\n          onClick={handleDeleteClick}\n        >\n          削除\n        </span>\n      </td>\n      {isModalVisible && (\n        <DeleteModal\n          onCancel={handleModalCancel}\n          onConfirm={handleDeleteModalConfirm}\n          initialValue={editValue}\n          deleteTarget={`${occupation.name}`}\n          isVisible={isModalVisible}\n        />\n      )}\n      <EditModal\n        isVisible={isEditModalVisible}\n        onCancel={handleEditModalCancel}\n        onConfirm={handleEditModalConfirm}\n        initialValue={editValue}\n        editTarget={`${occupation.name}`}\n      />\n    </tr>\n  );\n};\n\nexport default OccupationRow;\n","/usr/src/app/admin_front/src/components/pages/Occupations.tsx",["256","257","258"],[],"import React, { useState, useEffect, useMemo } from \"react\";\nimport { Helmet, HelmetProvider } from \"react-helmet-async\";\nimport Header from \"../molecules/shared/Header\";\nimport OccupationsData from \"../../data/Occupations_data\";\nimport OccupationRow from \"../molecules/occupations/OccupationRow\";\nimport CreateButton from \"../atoms/Buttons/CreateButton\";\nimport Pagination from \"../organisms/shared/Pagination\";\n\ninterface Occupation {\n  id: number;\n  name: string;\n  registrants: number;\n}\n\nconst meta = {\n  title: \"\",\n  meta: [],\n  link: [],\n  style: [],\n  script: [],\n};\n\nconst Occupations: React.FC = () => {\n  const [searchQuery, setSearchQuery] = useState<string>(\"\");\n  const [currentPage, setCurrentPage] = useState<number>(1);\n  const occupationsPerPage: number = 5;\n\n  const memoizedOccupationsData: Occupation[] = useMemo(() => {\n    return OccupationsData.filter((occupation: Occupation) =>\n      occupation.name.includes(searchQuery)\n    );\n  }, [searchQuery]);\n\n  const indexOfLastOccupation: number = currentPage * occupationsPerPage;\n  const indexOfFirstOccupation: number =\n    indexOfLastOccupation - occupationsPerPage;\n  const currentOccupations: Occupation[] = memoizedOccupationsData.slice(\n    indexOfFirstOccupation,\n    indexOfLastOccupation\n  );\n  const totalPages: number = Math.ceil(\n    memoizedOccupationsData.length / occupationsPerPage\n  );\n\n  const handlePageChange = (pageNumber: number): void => {\n    setCurrentPage(pageNumber);\n  };\n\n  return (\n    <React.Fragment>\n      <HelmetProvider>\n        <Helmet {...meta}></Helmet>\n      </HelmetProvider>\n      <>\n        <Header />\n        <section className=\"py-4 overflow-hidden\">\n          <div className=\"container px-4 mx-auto\">\n            <div className=\"pt-5 pb-7 bg-neutral-50 border border-neutral-100 rounded-xl\">\n              <div className=\"px-6\">\n                <div className=\"flex flex-wrap items-center justify-between -m-2 mb-5\">\n                  <div className=\"w-auto p-2\">\n                    <h3 className=\"font-heading text-lg text-neutral-600 font-semibold\">\n                      職種一覧\n                      <input\n                        className=\"pl-2 py-3 text-sm text-gray-200 border ml-2.5\"\n                        type=\"text\"\n                        placeholder=\"職種検索\"\n                        value={searchQuery}\n                        onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\n                          setSearchQuery(e.target.value)\n                        }\n                      />\n                    </h3>\n                  </div>\n                  <div>\n                    <CreateButton link=\"/occupations/new\" />\n                  </div>\n                </div>\n                <div className=\"mb-12 w-full overflow-x-auto\">\n                  <table className=\"w-full min-w-max\">\n                    <thead>\n                      <tr className=\"text-left\">\n                        <th className=\"p-0 whitespace-nowrap\">\n                          <div className=\"pb-3.5\">\n                            <a className=\"inline-flex items-center\" href=\"#\">\n                              <span className=\"mr-2.5 text-sm text-gray-400 font-medium\">\n                                職種名\n                              </span>\n                              <svg\n                                width={18}\n                                height={18}\n                                viewBox=\"0 0 18 18\"\n                                fill=\"none\"\n                                xmlns=\"http://www.w3.org/2000/svg\"\n                              >\n                                <path\n                                  fillRule=\"evenodd\"\n                                  clipRule=\"evenodd\"\n                                  d=\"M4.7636 6.5636C5.11508 6.21213 5.68492 6.21213 6.0364 6.5636L9 9.52721L11.9636 6.5636C12.3151 6.21213 12.8849 6.21213 13.2364 6.5636C13.5879 6.91508 13.5879 7.48492 13.2364 7.8364L9.6364 11.4364C9.28492 11.7879 8.71508 11.7879 8.3636 11.4364L4.7636 7.8364C4.41213 7.48492 4.41213 6.91508 4.7636 6.5636Z\"\n                                  fill=\"#7F8995\"\n                                />\n                              </svg>\n                            </a>\n                          </div>\n                        </th>\n                        <th className=\"p-0 whitespace-nowrap\">\n                          <div className=\"pb-3.5\">\n                            <a className=\"inline-flex items-center\" href=\"#\">\n                              <span className=\"mr-2.5 text-sm text-gray-400 font-medium\">\n                                職種の登録者\n                              </span>\n                              <svg\n                                width={18}\n                                height={18}\n                                viewBox=\"0 0 18 18\"\n                                fill=\"none\"\n                                xmlns=\"http://www.w3.org/2000/svg\"\n                              >\n                                <path\n                                  fillRule=\"evenodd\"\n                                  clipRule=\"evenodd\"\n                                  d=\"M4.7636 6.5636C5.11508 6.21213 5.68492 6.21213 6.0364 6.5636L9 9.52721L11.9636 6.5636C12.3151 6.21213 12.8849 6.21213 13.2364 6.5636C13.5879 6.91508 13.5879 7.48492 13.2364 7.8364L9.6364 11.4364C9.28492 11.7879 8.71508 11.7879 8.3636 11.4364L4.7636 7.8364C4.41213 7.48492 4.41213 6.91508 4.7636 6.5636Z\"\n                                  fill=\"#7F8995\"\n                                />\n                              </svg>\n                            </a>\n                          </div>\n                        </th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      {currentOccupations.map((occupation: Occupation) => (\n                        <OccupationRow\n                          key={occupation.id}\n                          occupation={occupation}\n                        />\n                      ))}\n                    </tbody>\n                  </table>\n                </div>\n                <Pagination\n                  currentPage={currentPage}\n                  totalPages={totalPages}\n                  onPageChange={handlePageChange}\n                />\n              </div>\n            </div>\n          </div>\n        </section>\n      </>\n    </React.Fragment>\n  );\n};\n\nexport default Occupations;\n","/usr/src/app/admin_front/src/components/molecules/industries/IndustryRow.tsx",[],[],"/usr/src/app/admin_front/src/data/Themes_data.tsx",[],[],"/usr/src/app/admin_front/src/data/users.tsx",[],[],"/usr/src/app/admin_front/src/data/Events_data.tsx",[],[],"/usr/src/app/admin_front/src/components/pages/IndustriesCreate.tsx",[],[],"/usr/src/app/admin_front/src/components/pages/ThemesCreate.tsx",[],[],"/usr/src/app/admin_front/src/components/pages/EventCreate.tsx",["259"],[],"import React, { useState, useEffect } from \"react\";\nimport { Helmet, HelmetProvider } from \"react-helmet-async\";\nimport Header from \"../molecules/shared/Header\";\nimport { useNavigate } from \"react-router-dom\";\n\ninterface Meta {\n  title: string;\n  meta: any[];\n  link: any[];\n  style: any[];\n  script: any[];\n}\n\nconst meta: Meta = {\n  title: \"\",\n  meta: [],\n  link: [],\n  style: [],\n  script: [],\n};\n\nconst EventCreate: React.FC = () => {\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    const rootElement = document.getElementById(\"root\");\n    let classes = rootElement?.classList;\n    rootElement?.classList.remove(...classes!);\n  }, []);\n\n  const handleBackClick = () => {\n    navigate(-1);\n  };\n\n  const handleRegisterClick = () => {\n    // 登録処理\n  };\n\n  return (\n    <React.Fragment>\n      <HelmetProvider>\n        <Helmet {...meta}></Helmet>\n      </HelmetProvider>\n      <>\n        <Header />\n        <section className=\"py-4 overflow-hidden\">\n          <div className=\"container px-4 mx-auto\">\n            <div className=\"p-6 bg-white border rounded-xl\">\n              <div className=\"flex flex-wrap justify-between -m-2\">\n                <div className=\"w-full sm:w-1/2 p-2\">\n                  <h3 className=\"font-heading text-sm font-semibold\">\n                    新しいイベントのタイトル\n                  </h3>\n                </div>\n                <div className=\"w-full sm:w-1/2 p-2\">\n                  <textarea\n                    className=\"block px-3.5 pb-3.5 pt-2.5 text-sm w-full sm:max-w-md ml-auto placeholder-neutral-400 hover:bg-gray-50 outline-none border border-neutral-200 focus:border-neutral-600 rounded-lg\"\n                    id=\"inputsTextarea5-1\"\n                    rows={4}\n                    placeholder=\"Write a short note\"\n                    defaultValue={\"\"}\n                  />\n                </div>\n              </div>\n              <div className=\"flex flex-wrap justify-between -m-2\">\n                <div className=\"w-full sm:w-1/2 p-2\">\n                  <h3 className=\"font-heading text-sm font-semibold\">\n                    新しいイベントのURL\n                  </h3>\n                </div>\n                <div className=\"w-full sm:w-1/2 p-2\">\n                  <textarea\n                    className=\"block px-3.5 pb-3.5 pt-2.5 text-sm w-full sm:max-w-md ml-auto placeholder-neutral-400 hover:bg-gray-50 outline-none border border-neutral-200 focus:border-neutral-600 rounded-lg\"\n                    id=\"inputsTextarea5-1\"\n                    rows={4}\n                    placeholder=\"Write a short note\"\n                    defaultValue={\"\"}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className=\"flex justify-center space-x-4 mt-3\">\n            {\" \"}\n            <button\n              className=\"inline-flex flex-wrap items-center px-5 py-3.5 text-sm text-neutral-50 font-medium hover:bg-gradient-purple-left-dark rounded-lg transition duration-300 bg-blue-500\"\n              onClick={handleBackClick}\n            >\n              戻る\n            </button>\n            <button\n              className=\"inline-flex flex-wrap items-center px-5 py-3.5 text-sm text-neutral-50 font-medium hover:bg-gradient-purple-left-dark rounded-lg transition duration-300 bg-blue-500\"\n              onClick={handleRegisterClick}\n            >\n              登録する\n            </button>\n          </div>{\" \"}\n        </section>\n      </>\n    </React.Fragment>\n  );\n};\n\nexport default EventCreate;\n","/usr/src/app/admin_front/src/components/pages/Themes.tsx",["260","261","262"],[],"import React, { useState, useEffect, useMemo } from \"react\";\nimport { Helmet, HelmetProvider } from \"react-helmet-async\";\nimport Header from \"../molecules/shared/Header\";\nimport ThemesData from \"../../data/Themes_data\";\nimport ThemeRow from \"../molecules/themes/ThemeRow\";\nimport CreateButton from \"../atoms/Buttons/CreateButton\";\nimport Pagination from \"../organisms/shared/Pagination\";\n\ninterface Meta {\n  title: string;\n  meta: any[];\n  link: any[];\n  style: any[];\n  script: any[];\n}\n\nconst meta: Meta = {\n  title: \"\",\n  meta: [],\n  link: [],\n  style: [],\n  script: [],\n};\n\nconst Theme: React.FC = () => {\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const [currentPage, setCurrentPage] = useState(1);\n  const themesPerPage = 5;\n\n  const memoizedThemesData = useMemo(() => {\n    return ThemesData.filter((theme) => theme.name.includes(searchQuery));\n  }, [searchQuery]);\n\n  const indexOfLastTheme = currentPage * themesPerPage;\n  const indexOfFirstTheme = indexOfLastTheme - themesPerPage;\n  const currentThemes = memoizedThemesData.slice(\n    indexOfFirstTheme,\n    indexOfLastTheme\n  );\n  const totalPages = Math.ceil(memoizedThemesData.length / themesPerPage);\n\n  const handleSearchQueryChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setSearchQuery(e.target.value);\n  };\n\n  const handlePageChange = (pageNumber: number) => {\n    setCurrentPage(pageNumber);\n  };\n\n  return (\n    <React.Fragment>\n      <HelmetProvider>\n        <Helmet {...meta}></Helmet>\n      </HelmetProvider>\n      <>\n        <Header />\n        <section className=\"py-4 overflow-hidden\">\n          <div className=\"container px-4 mx-auto\">\n            <div className=\"pt-5 pb-7 bg-neutral-50 border border-neutral-100 rounded-xl\">\n              <div className=\"px-6\">\n                <div className=\"flex flex-wrap items-center justify-between -m-2 mb-5\">\n                  <div className=\"w-auto p-2\">\n                    <h3 className=\"font-heading text-lg text-neutral-600 font-semibold\">\n                      テーマ一覧\n                      <input\n                        className=\"pl-2 py-3 text-sm text-gray-200 border ml-2.5\"\n                        type=\"text\"\n                        placeholder=\"テーマ検索\"\n                        value={searchQuery}\n                        onChange={handleSearchQueryChange}\n                      />\n                    </h3>\n                  </div>\n                  <div>\n                    <CreateButton link=\"/themes/new\" />\n                  </div>\n                </div>\n                <div className=\"mb-12 w-full overflow-x-auto\">\n                  <table className=\"w-full min-w-max\">\n                    <thead>\n                      <tr className=\"text-left\">\n                        <th className=\"p-0 whitespace-nowrap\">\n                          <div className=\"pb-3.5\">\n                            <a className=\"inline-flex items-center\" href=\"#\">\n                              <span className=\"mr-2.5 text-sm text-gray-400 font-medium\">\n                                テーマ名\n                              </span>\n                              <svg\n                                width={18}\n                                height={18}\n                                viewBox=\"0 0 18 18\"\n                                fill=\"none\"\n                                xmlns=\"http://www.w3.org/2000/svg\"\n                              >\n                                <path\n                                  fillRule=\"evenodd\"\n                                  clipRule=\"evenodd\"\n                                  d=\"M4.7636 6.5636C5.11508 6.21213 5.68492 6.21213 6.0364 6.5636L9 9.52721L11.9636 6.5636C12.3151 6.21213 12.8849 6.21213 13.2364 6.5636C13.5879 6.91508 13.5879 7.48492 13.2364 7.8364L9.6364 11.4364C9.28492 11.7879 8.71508 11.7879 8.3636 11.4364L4.7636 7.8364C4.41213 7.48492 4.41213 6.91508 4.7636 6.5636Z\"\n                                  fill=\"#7F8995\"\n                                />\n                              </svg>\n                            </a>\n                          </div>\n                        </th>\n                        <th className=\"p-0 whitespace-nowrap\">\n                          <div className=\"pb-3.5\">\n                            <a className=\"inline-flex items-center\" href=\"#\">\n                              <span className=\"mr-2.5 text-sm text-gray-400 font-medium\">\n                                テーマの登録者\n                              </span>\n                              <svg\n                                width={18}\n                                height={18}\n                                viewBox=\"0 0 18 18\"\n                                fill=\"none\"\n                                xmlns=\"http://www.w3.org/2000/svg\"\n                              >\n                                <path\n                                  fillRule=\"evenodd\"\n                                  clipRule=\"evenodd\"\n                                  d=\"M4.7636 6.5636C5.11508 6.21213 5.68492 6.21213 6.0364 6.5636L9 9.52721L11.9636 6.5636C12.3151 6.21213 12.8849 6.21213 13.2364 6.5636C13.5879 6.91508 13.5879 7.48492 13.2364 7.8364L9.6364 11.4364C9.28492 11.7879 8.71508 11.7879 8.3636 11.4364L4.7636 7.8364C4.41213 7.48492 4.41213 6.91508 4.7636 6.5636Z\"\n                                  fill=\"#7F8995\"\n                                />\n                              </svg>\n                            </a>\n                          </div>\n                        </th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      {currentThemes.map((theme) => (\n                        <ThemeRow key={theme.id} theme={theme} />\n                      ))}\n                    </tbody>\n                  </table>\n                </div>\n                <Pagination\n                  currentPage={currentPage}\n                  totalPages={totalPages}\n                  onPageChange={handlePageChange}\n                />\n              </div>\n            </div>\n          </div>\n        </section>\n      </>\n    </React.Fragment>\n  );\n};\n\nexport default Theme;\n","/usr/src/app/admin_front/src/components/pages/UserDetails.tsx",[],[],"/usr/src/app/admin_front/src/components/pages/Event.tsx",["263"],[],"import React, { useState } from \"react\";\nimport { Helmet, HelmetProvider } from \"react-helmet-async\";\nimport Header from \"../molecules/shared/Header\";\nimport EventRow from \"../molecules/events/EventRow\";\nimport CreateButton from \"../atoms/Buttons/CreateButton\";\nimport EventsData from \"../../data/Events_data\";\nimport Pagination from \"../organisms/shared/Pagination\";\n\ninterface Meta {\n  title: string;\n  meta: any[];\n  link: any[];\n  style: any[];\n  script: any[];\n}\n\nconst meta: Meta = {\n  title: \"\",\n  meta: [],\n  link: [],\n  style: [],\n  script: [],\n};\n\nfunction Event() {\n  const [searchQuery, setSearchQuery] = useState<string>(\"\");\n  const [currentPage, setCurrentPage] = useState<number>(1);\n  const eventsPerPage: number = 5;\n\n  const filteredEvents = EventsData.filter((event) =>\n    event.title.toLowerCase().includes(searchQuery.toLowerCase())\n  );\n\n  const indexOfLastEvent: number = currentPage * eventsPerPage;\n  const indexOfFirstEvent: number = indexOfLastEvent - eventsPerPage;\n  const currentEvents = filteredEvents.slice(\n    indexOfFirstEvent,\n    indexOfLastEvent\n  );\n  const totalPages: number = Math.ceil(filteredEvents.length / eventsPerPage);\n\n  return (\n    <React.Fragment>\n      <HelmetProvider>\n        <Helmet {...meta}></Helmet>\n      </HelmetProvider>\n      <>\n        <Header />\n        <section className=\"py-4 overflow-hidden\">\n          <div className=\"container px-4 mx-auto\">\n            <div className=\"pt-5 pb-7 bg-neutral-50 border border-neutral-100 rounded-xl\">\n              <div className=\"px-6\">\n                <div className=\"flex flex-wrap items-center justify-between -m-2 mb-5\">\n                  <div className=\"w-auto p-2\">\n                    <h3 className=\"font-heading text-lg text-neutral-600 font-semibold\">\n                      イベント通知一覧\n                      <input\n                        className=\"pl-2 py-3 text-sm text-gray-200 border ml-2.5\"\n                        type=\"text\"\n                        placeholder=\"イベントタイトル検索\"\n                        value={searchQuery}\n                        onChange={(e) => setSearchQuery(e.target.value)}\n                      />\n                    </h3>\n                  </div>\n                  <div>\n                    <CreateButton link=\"/event/new\" />\n                  </div>\n                </div>\n                <div className=\"mb-12 w-full overflow-x-auto\">\n                  <table className=\"w-full min-w-max\">\n                    <thead>\n                      <tr className=\"text-left\">\n                        <th className=\"p-0 whitespace-nowrap\">\n                          <div className=\"pb-3.5\">\n                            <a className=\"inline-flex items-center\" href=\"#\">\n                              <span className=\"mr-2.5 text-sm text-gray-400 font-medium\">\n                                イベントタイトル名\n                              </span>\n                              <svg\n                                width={18}\n                                height={18}\n                                viewBox=\"0 0 18 18\"\n                                fill=\"none\"\n                                xmlns=\"http://www.w3.org/2000/svg\"\n                              >\n                                <path\n                                  fillRule=\"evenodd\"\n                                  clipRule=\"evenodd\"\n                                  d=\"M4.7636 6.5636C5.11508 6.21213 5.68492 6.21213 6.0364 6.5636L9 9.52721L11.9636 6.5636C12.3151 6.21213 12.8849 6.21213 13.2364 6.5636C13.5879 6.91508 13.5879 7.48492 13.2364 7.8364L9.6364 11.4364C9.28492 11.7879 8.71508 11.7879 8.3636 11.4364L4.7636 7.8364C4.41213 7.48492 4.41213 6.91508 4.7636 6.5636Z\"\n                                  fill=\"#7F8995\"\n                                />\n                              </svg>\n                            </a>\n                          </div>\n                        </th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      {currentEvents.map((event) => (\n                        <EventRow key={event.id} event={event} />\n                      ))}\n                    </tbody>\n                  </table>\n                </div>\n                <Pagination\n                  currentPage={currentPage}\n                  totalPages={totalPages}\n                  onPageChange={setCurrentPage}\n                />\n              </div>\n            </div>\n          </div>\n        </section>\n      </>\n    </React.Fragment>\n  );\n}\n\nexport default Event;\n","/usr/src/app/admin_front/src/components/pages/AdminUsers.tsx",["264","265"],[],"import React, { memo, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Helmet, HelmetProvider } from \"react-helmet-async\";\nimport Header from \"../molecules/shared/Header\";\nimport TableHeader from \"../molecules/admin_users/TableHeader\";\nimport TableRow from \"../molecules/admin_users/TableRow\";\nimport Pagination from \"../organisms/shared/Pagination\";\nimport users from \"../../data/users\";\n\ninterface Meta {\n  title: string;\n  meta: any[];\n  link: any[];\n  style: any[];\n  script: any[];\n}\n\nconst meta: Meta = {\n  title: \"\",\n  meta: [],\n  link: [],\n  style: [],\n  script: [],\n};\n\nconst AdminUsers = () => {\n  const [currentPage, setCurrentPage] = useState<number>(1);\n  const usersPerPage: number = 10;\n  const indexOfLastUser: number = currentPage * usersPerPage;\n  const indexOfFirstUser: number = indexOfLastUser - usersPerPage;\n  const currentUsers = users.slice(indexOfFirstUser, indexOfLastUser);\n  const totalPages: number = Math.ceil(users.length / usersPerPage);\n\n  const handleCellClick = () => {};\n\n  return (\n    <HelmetProvider>\n      <Helmet {...meta}></Helmet>\n      <Header />\n      <section className=\"py-4 overflow-hidden\">\n        <div className=\"container px-4 mx-auto\">\n          <div className=\"py-5 bg-neutral-50 border border-neutral-100 rounded-xl\">\n            <div className=\"px-6\">\n              <h3 className=\"font-heading pb-8 text-lg text-neutral-600 font-semibold\">\n                管理者ユーザ一覧\n              </h3>\n              <div className=\"mb-5 w-full overflow-x-auto\">\n                <table className=\"w-full min-w-max\">\n                  <thead>\n                    <tr className=\"text-left\">\n                      <TableHeader label=\"Id\" />\n                      <TableHeader label=\"性\" />\n                      <TableHeader label=\"名\" />\n                      <TableHeader label=\"属性\" />\n                      <TableHeader label=\"メールアドレス\" />\n                      <th className=\"pb-3.5 border-b border-neutral-100\" />\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {currentUsers.map((user) => (\n                      <TableRow key={user.id} {...user} />\n                    ))}\n                  </tbody>\n                </table>\n              </div>\n            </div>\n            <Pagination\n              currentPage={currentPage}\n              totalPages={totalPages}\n              onPageChange={setCurrentPage}\n            />\n          </div>\n        </div>\n      </section>\n    </HelmetProvider>\n  );\n};\n\nexport default memo(AdminUsers);\n","/usr/src/app/admin_front/src/components/organisms/userdetails/DetailsView.tsx",[],[],"/usr/src/app/admin_front/src/components/organisms/userdetails/VerificationView.tsx",["266","267"],[],"import React from \"react\";\n\nfunction VerificationView() {\n  return (\n    <div className=\"max-w-xs py-16 mx-auto text-center\">\n      <div className=\"flex justify-center space-x-4 mb-8\">\n        <img\n          className=\"w-1/3\"\n          src=\"/images/blue-pkmin.jpeg\"\n          alt=\"Verification Image 1\"\n        />\n        <img\n          className=\"w-1/3\"\n          src=\"/images/red-pikmin.jpeg\"\n          alt=\"Verification Image 2\"\n        />\n      </div>\n      <div className=\"flex justify-center space-x-4\">\n        <button className=\"px-4 py-2 font-bold text-white bg-blue-500 rounded hover:bg-blue-700\">\n          承認\n        </button>\n        <button className=\"px-4 py-2 font-bold text-white bg-red-500 rounded hover:bg-red-700\">\n          拒否\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default VerificationView;\n","/usr/src/app/admin_front/src/components/molecules/events/EventRow.tsx",[],[],"/usr/src/app/admin_front/src/components/molecules/admin_users/TableRow.tsx",[],[],"/usr/src/app/admin_front/src/components/pages/SignIn.tsx",[],[],"/usr/src/app/admin_front/src/components/pages/OccupationsCreate.tsx",["268"],[],"import React, { useEffect } from \"react\";\nimport { Helmet, HelmetProvider } from \"react-helmet-async\";\nimport Header from \"../molecules/shared/Header\";\nimport { useNavigate } from \"react-router-dom\";\n\ninterface Meta {\n  title: string;\n  meta: any[];\n  link: any[];\n  style: any[];\n  script: any[];\n}\n\nconst meta: Meta = {\n  title: \"\",\n  meta: [],\n  link: [],\n  style: [],\n  script: [],\n};\n\nconst OccupationsCreate: React.FC = () => {\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    const rootElement = document.getElementById(\"root\");\n    let classes = rootElement?.classList;\n    rootElement?.classList.remove(...classes!);\n  }, []);\n\n  const handleBackClick = () => {\n    navigate(-1);\n  };\n\n  return (\n    <React.Fragment>\n      <HelmetProvider>\n        <Helmet {...meta}></Helmet>\n      </HelmetProvider>\n      <>\n        <Header />\n        <section className=\"py-4 overflow-hidden\">\n          <div className=\"container px-4 mx-auto\">\n            <div className=\"p-6 bg-white border rounded-xl\">\n              <div className=\"flex flex-wrap justify-between -m-2\">\n                <div className=\"w-full sm:w-1/2 p-2\">\n                  <h3 className=\"font-heading text-sm font-semibold\">\n                    新しい職種の名前\n                  </h3>\n                </div>\n                <div className=\"w-full sm:w-1/2 p-2\">\n                  <textarea\n                    className=\"block px-3.5 pb-3.5 pt-2.5 text-sm w-full sm:max-w-md ml-auto placeholder-neutral-400 hover:bg-gray-50 outline-none border border-neutral-200 focus:border-neutral-600 rounded-lg\"\n                    id=\"inputsTextarea5-1\"\n                    rows={4}\n                    placeholder=\"Write a short note\"\n                    defaultValue={\"\"}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className=\"flex justify-center space-x-4 mt-3\">\n            {\" \"}\n            <button\n              type=\"button\"\n              className=\"inline-flex flex-wrap items-center px-5 py-3.5 text-sm text-neutral-50 font-medium hover:bg-gradient-purple-left-dark rounded-lg transition duration-300 bg-blue-500\"\n              onClick={handleBackClick}\n            >\n              戻る\n            </button>\n            <a\n              className=\"inline-flex flex-wrap items-center px-5 py-3.5 text-sm text-neutral-50 font-medium hover:bg-gradient-purple-left-dark rounded-lg transition duration-300 bg-blue-500\"\n              href=\"#\"\n            >\n              登録する\n            </a>\n          </div>{\" \"}\n        </section>\n      </>\n    </React.Fragment>\n  );\n};\n\nexport default OccupationsCreate;\n","/usr/src/app/admin_front/src/components/molecules/admin_users/TableHeader.tsx",["269"],[],"import React from \"react\";\n\ninterface Props {\n  label: string;\n}\n\nconst TableHeader = ({ label }: Props) => (\n  <th className=\"pb-3.5 border-b border-neutral-100 whitespace-nowrap\">\n    <a\n      className=\"inline-flex items-center text-sm text-gray-500 font-medium uppercase\"\n      href=\"#\"\n    >\n      <span className=\"mr-1.5\">{label}</span>\n      <svg\n        width={18}\n        height={18}\n        viewBox=\"0 0 18 18\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n      >\n        <path\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n          d=\"M4.7636 6.56365C5.11508 6.21218 5.68492 6.21218 6.0364 6.56365L9 9.52726L11.9636 6.56365C12.3151 6.21218 12.8849 6.21218 13.2364 6.56365C13.5879 6.91512 13.5879 7.48497 13.2364 7.83645L9.6364 11.4364C9.28492 11.7879 8.71508 11.7879 8.3636 11.4364L4.7636 7.83645C4.41213 7.48497 4.41213 6.91512 4.7636 6.56365Z\"\n          fill=\"#7F8995\"\n        />\n      </svg>\n    </a>\n  </th>\n);\n\nexport default TableHeader;\n","/usr/src/app/admin_front/src/components/molecules/themes/ThemeRow.tsx",["270"],[],"import React, { useState } from \"react\";\nimport DeleteModal from \"../../organisms/shared/DeleteModal\";\nimport EditModal from \"../../organisms/shared/EditModal\";\n\ninterface Theme {\n  name: string;\n  registrants: number;\n}\n\ninterface Props {\n  theme: Theme;\n}\n\nconst ThemeRow = ({ theme }: Props) => {\n  const [isModalVisible, setIsModalVisible] = useState(false);\n  const [isEditModalVisible, setIsEditModalVisible] = useState(false);\n  const [editValue, setEditValue] = useState(theme.name);\n\n  const handleDeleteClick = () => {\n    setIsModalVisible(true);\n  };\n\n  const handleModalCancel = () => {\n    setIsModalVisible(false);\n  };\n\n  const handleModalConfirm = () => {\n    setIsModalVisible(false);\n    console.log(`Delete ${theme.name}`);\n  };\n\n  const handleEditClick = () => {\n    setIsEditModalVisible(true);\n  };\n\n  const handleEditModalCancel = () => {\n    setIsEditModalVisible(false);\n  };\n\n  const handleDeleteModalConfirm = (): void => {\n    setIsModalVisible(false);\n    console.log(`Delete ${theme.name}`);\n  };\n\n  const handleEditModalConfirm = (value: string) => {\n    setEditValue(value);\n    setIsEditModalVisible(false);\n    console.log(`Edit ${theme.name} to ${value}`);\n  };\n\n  return (\n    <tr>\n      <td className=\"py-3 pr-4 whitespace-nowrap\">\n        <div className=\"flex flex-wrap items-center\">\n          <span className=\"font-semibold\">{editValue}</span>\n        </div>\n      </td>\n      <td className=\"py-3 pr-4\">\n        <span className=\"font-medium\">{theme.registrants}人</span>\n      </td>\n      <td className=\"py-3 pr-4\">\n        <span\n          className=\"px-2.5 py-1 text-sm font-medium bg-opacity-10 rounded-full text-blue-900 bg-blue-900 cursor-pointer\"\n          onClick={handleEditClick}\n        >\n          編集\n        </span>\n      </td>\n      <td className=\"flex justify-end py-3 pr-4\">\n        <span\n          className=\"px-2.5 py-1 text-sm font-medium bg-opacity-10 rounded-full text-red-900 bg-red-900 cursor-pointer\"\n          onClick={handleDeleteClick}\n        >\n          削除\n        </span>\n      </td>\n      {isModalVisible && (\n        <DeleteModal\n          onCancel={handleModalCancel}\n          onConfirm={handleDeleteModalConfirm}\n          initialValue={editValue}\n          deleteTarget={`${theme.name}`}\n          isVisible={isModalVisible}\n        />\n      )}\n      <EditModal\n        isVisible={isEditModalVisible}\n        onCancel={handleEditModalCancel}\n        onConfirm={handleEditModalConfirm}\n        initialValue={editValue}\n        editTarget={`${theme.name}`}\n      />\n    </tr>\n  );\n};\n\nexport default ThemeRow;\n","/usr/src/app/admin_front/src/infrastructure/Storage.ts",[],[],"/usr/src/app/admin_front/src/infrastructure/API.ts",[],[],"/usr/src/app/admin_front/src/models/presentation/UserItem.ts",[],[],"/usr/src/app/admin_front/src/infrastructure/repositories/UsersRepository.ts",[],[],"/usr/src/app/admin_front/src/infrastructure/repositories/errors.ts",[],[],"/usr/src/app/admin_front/src/infrastructure/repositories/index.ts",[],[],"/usr/src/app/admin_front/src/usecases/FetchUsersUsecase.ts",["271"],[],"import { Storage } from \"../infrastructure/Storage\";\nimport {\n  InvlalidSessionTokenError,\n  UsersRepository,\n  UnauthorizedError,\n} from \"../infrastructure/repositories\";\nimport { UserItem } from \"../models/presentation/UserItem\";\n\nexport class FetchUsersOutput {\n  readonly users: UserItem[];\n\n  constructor(users: UserItem[]) {\n    this.users = users;\n    // console.log(\"FetchUsersOutput constructor - users:\", this.users);\n  }\n}\n\nexport class FetchUsersUsecase {\n  public usersRepository: UsersRepository;\n\n  constructor(usersRepository: UsersRepository) {\n    this.usersRepository = usersRepository;\n  }\n\n  async fetch(): Promise<FetchUsersOutput> {\n    const sessionToken = Storage.restoreSessionToken() || \"temporaryToken\";\n\n    try {\n      const response = await this.usersRepository.fetch(sessionToken);\n      // console.log(\"Full Fetched Response:\", JSON.stringify(response, null, 2));\n      const users = response.data.results.map(\n        (user: any) =>\n          new UserItem({\n            id: user.id,\n            code: user.code,\n            name: user.name,\n            status: user.status,\n            email: user.email,\n          })\n      );\n      return new FetchUsersOutput(users || []);\n    } catch (e) {\n      console.error(\"Error in FetchUsersUsecase.fetch:\", e);\n      if (e instanceof UnauthorizedError) {\n        Storage.clear();\n      }\n      throw e;\n    }\n  }\n}\n","/usr/src/app/admin_front/src/usecases/GetUserDetailUsecase.ts",[],[],"/usr/src/app/admin_front/src/models/presentation/UserDetailItem.ts",[],[],{"ruleId":"272","replacedBy":"273"},{"ruleId":"274","severity":1,"message":"275","line":9,"column":10,"nodeType":"276","messageId":"277","endLine":9,"endColumn":17},{"ruleId":"274","severity":1,"message":"278","line":17,"column":10,"nodeType":"276","messageId":"277","endLine":17,"endColumn":29},{"ruleId":"274","severity":1,"message":"279","line":43,"column":24,"nodeType":"276","messageId":"277","endLine":43,"endColumn":39},{"ruleId":"274","severity":1,"message":"280","line":52,"column":10,"nodeType":"276","messageId":"277","endLine":52,"endColumn":17},{"ruleId":"274","severity":1,"message":"281","line":52,"column":19,"nodeType":"276","messageId":"277","endLine":52,"endColumn":29},{"ruleId":"274","severity":1,"message":"282","line":53,"column":10,"nodeType":"276","messageId":"277","endLine":53,"endColumn":15},{"ruleId":"283","severity":1,"message":"284","line":125,"column":17,"nodeType":"285","endLine":125,"endColumn":29},{"ruleId":"283","severity":1,"message":"284","line":9,"column":5,"nodeType":"285","endLine":12,"endColumn":6},{"ruleId":"274","severity":1,"message":"286","line":1,"column":27,"nodeType":"276","messageId":"277","endLine":1,"endColumn":36},{"ruleId":"274","severity":1,"message":"287","line":24,"column":22,"nodeType":"276","messageId":"277","endLine":24,"endColumn":35},{"ruleId":"283","severity":1,"message":"284","line":77,"column":29,"nodeType":"285","endLine":77,"endColumn":78},{"ruleId":"283","severity":1,"message":"284","line":100,"column":29,"nodeType":"285","endLine":100,"endColumn":78},{"ruleId":"274","severity":1,"message":"288","line":28,"column":9,"nodeType":"276","messageId":"277","endLine":28,"endColumn":27},{"ruleId":"274","severity":1,"message":"286","line":1,"column":27,"nodeType":"276","messageId":"277","endLine":1,"endColumn":36},{"ruleId":"283","severity":1,"message":"284","line":85,"column":29,"nodeType":"285","endLine":85,"endColumn":78},{"ruleId":"283","severity":1,"message":"284","line":108,"column":29,"nodeType":"285","endLine":108,"endColumn":78},{"ruleId":"274","severity":1,"message":"289","line":1,"column":17,"nodeType":"276","messageId":"277","endLine":1,"endColumn":25},{"ruleId":"274","severity":1,"message":"286","line":1,"column":27,"nodeType":"276","messageId":"277","endLine":1,"endColumn":36},{"ruleId":"283","severity":1,"message":"284","line":84,"column":29,"nodeType":"285","endLine":84,"endColumn":78},{"ruleId":"283","severity":1,"message":"284","line":107,"column":29,"nodeType":"285","endLine":107,"endColumn":78},{"ruleId":"283","severity":1,"message":"284","line":76,"column":29,"nodeType":"285","endLine":76,"endColumn":78},{"ruleId":"274","severity":1,"message":"290","line":2,"column":10,"nodeType":"276","messageId":"277","endLine":2,"endColumn":14},{"ruleId":"274","severity":1,"message":"291","line":34,"column":9,"nodeType":"276","messageId":"277","endLine":34,"endColumn":24},{"ruleId":"292","severity":1,"message":"293","line":7,"column":9,"nodeType":"285","endLine":11,"endColumn":11},{"ruleId":"292","severity":1,"message":"293","line":12,"column":9,"nodeType":"285","endLine":16,"endColumn":11},{"ruleId":"283","severity":1,"message":"284","line":72,"column":13,"nodeType":"285","endLine":75,"endColumn":14},{"ruleId":"283","severity":1,"message":"284","line":9,"column":5,"nodeType":"285","endLine":12,"endColumn":6},{"ruleId":"274","severity":1,"message":"288","line":27,"column":9,"nodeType":"276","messageId":"277","endLine":27,"endColumn":27},{"ruleId":"274","severity":1,"message":"294","line":3,"column":3,"nodeType":"276","messageId":"277","endLine":3,"endColumn":28},"no-new-object",["295"],"@typescript-eslint/no-unused-vars","'Storage' is defined but never used.","Identifier","unusedVar","'GetUserDetailOutput' is defined but never used.","'setItemsPerPage' is assigned a value but never used.","'loading' is assigned a value but never used.","'setLoading' is assigned a value but never used.","'error' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","'useEffect' is defined but never used.","'setIndustries' is assigned a value but never used.","'handleModalConfirm' is assigned a value but never used.","'useState' is defined but never used.","'Link' is defined but never used.","'handleCellClick' is assigned a value but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","'InvlalidSessionTokenError' is defined but never used.","no-object-constructor"]