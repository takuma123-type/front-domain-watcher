{"ast":null,"code":"import { API } from \"../API\";\nimport { axiosClient } from \"../axiosClient\";\nimport { UnauthorizedError, UnknownError } from \"./errors\";\nexport class UsersRepository {\n  async fetch() {\n    try {\n      const response = await axiosClient.get(API.createURL(API.URL.users()), {\n        withCredentials: true,\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      if (response.status === 200) {\n        return response;\n      }\n      throw new UnknownError();\n    } catch (error) {\n      if (error instanceof UnauthorizedError) {\n        throw new UnauthorizedError();\n      }\n      throw error;\n    }\n  }\n  async get(userId) {\n    try {\n      const response = await axiosClient.get(API.createURL(API.URL.user({\n        userId: userId\n      })), {\n        \"withCredentials\": true,\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      if (response.status === 200) {\n        return response;\n      }\n      throw new UnknownError();\n    } catch (error) {\n      if (error instanceof UnauthorizedError) {\n        throw new UnauthorizedError();\n      }\n      throw error;\n    }\n  }\n}\n\n// async function getUserDetail(\n//   userId: string,\n//   sessionToken: string\n// ): Promise<void> {\n//   const usersRepository = new UsersRepository();\n//   try {\n//     const response = await usersRepository.fetchUser(sessionToken, userId);\n//     console.log(\"Full Fetched Response:\", JSON.stringify(response, null, 2));\n//   } catch (error) {\n//     console.error(error);\n//   }\n// }\n\n// const userId = \"7\";\n// const sessionToken = \"your_session_token\";\n// getUserDetail(userId, sessionToken);","map":{"version":3,"names":["API","axiosClient","UnauthorizedError","UnknownError","UsersRepository","fetch","response","get","createURL","URL","users","withCredentials","headers","Accept","status","error","userId","user"],"sources":["/usr/src/app/admin_front/src/infrastructure/repositories/UsersRepository.ts"],"sourcesContent":["import { API } from \"../API\";\nimport { axiosClient } from \"../axiosClient\";\nimport { UnauthorizedError, UnknownError } from \"./errors\";\n\nexport class UsersRepository {\n  async fetch(): Promise<any> {\n    try {\n      const response = await axiosClient.get(\n        API.createURL(API.URL.users()),\n        {\n          withCredentials: true,\n          headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\",\n          },\n        }\n      );\n\n      if (response.status === 200) {\n        return response;\n      }\n\n      throw new UnknownError();\n    } catch (error) {\n      if (error instanceof UnauthorizedError){\n        throw new UnauthorizedError();\n      }\n      throw error;\n    }\n  }\n\n  async get(userId: string): Promise<any> {\n    try {\n      const response = await axiosClient.get(\n        API.createURL(API.URL.user({ userId: userId })),\n        {\n          \"withCredentials\": true,\n          headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\",\n          },\n        }\n      );\n\n      if (response.status === 200) {\n        return response;\n      }\n\n      throw new UnknownError();\n    } catch (error) {\n      if (error instanceof UnauthorizedError){\n        throw new UnauthorizedError();\n      }\n      throw error;\n    }\n  }\n}\n\n// async function getUserDetail(\n//   userId: string,\n//   sessionToken: string\n// ): Promise<void> {\n//   const usersRepository = new UsersRepository();\n//   try {\n//     const response = await usersRepository.fetchUser(sessionToken, userId);\n//     console.log(\"Full Fetched Response:\", JSON.stringify(response, null, 2));\n//   } catch (error) {\n//     console.error(error);\n//   }\n// }\n\n// const userId = \"7\";\n// const sessionToken = \"your_session_token\";\n// getUserDetail(userId, sessionToken);\n"],"mappings":"AAAA,SAASA,GAAG,QAAQ,QAAQ;AAC5B,SAASC,WAAW,QAAQ,gBAAgB;AAC5C,SAASC,iBAAiB,EAAEC,YAAY,QAAQ,UAAU;AAE1D,OAAO,MAAMC,eAAe,CAAC;EAC3B,MAAMC,KAAKA,CAAA,EAAiB;IAC1B,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAML,WAAW,CAACM,GAAG,CACpCP,GAAG,CAACQ,SAAS,CAACR,GAAG,CAACS,GAAG,CAACC,KAAK,CAAC,CAAC,CAAC,EAC9B;QACEC,eAAe,EAAE,IAAI;QACrBC,OAAO,EAAE;UACPC,MAAM,EAAE,kBAAkB;UAC1B,cAAc,EAAE;QAClB;MACF,CACF,CAAC;MAED,IAAIP,QAAQ,CAACQ,MAAM,KAAK,GAAG,EAAE;QAC3B,OAAOR,QAAQ;MACjB;MAEA,MAAM,IAAIH,YAAY,CAAC,CAAC;IAC1B,CAAC,CAAC,OAAOY,KAAK,EAAE;MACd,IAAIA,KAAK,YAAYb,iBAAiB,EAAC;QACrC,MAAM,IAAIA,iBAAiB,CAAC,CAAC;MAC/B;MACA,MAAMa,KAAK;IACb;EACF;EAEA,MAAMR,GAAGA,CAACS,MAAc,EAAgB;IACtC,IAAI;MACF,MAAMV,QAAQ,GAAG,MAAML,WAAW,CAACM,GAAG,CACpCP,GAAG,CAACQ,SAAS,CAACR,GAAG,CAACS,GAAG,CAACQ,IAAI,CAAC;QAAED,MAAM,EAAEA;MAAO,CAAC,CAAC,CAAC,EAC/C;QACE,iBAAiB,EAAE,IAAI;QACvBJ,OAAO,EAAE;UACPC,MAAM,EAAE,kBAAkB;UAC1B,cAAc,EAAE;QAClB;MACF,CACF,CAAC;MAED,IAAIP,QAAQ,CAACQ,MAAM,KAAK,GAAG,EAAE;QAC3B,OAAOR,QAAQ;MACjB;MAEA,MAAM,IAAIH,YAAY,CAAC,CAAC;IAC1B,CAAC,CAAC,OAAOY,KAAK,EAAE;MACd,IAAIA,KAAK,YAAYb,iBAAiB,EAAC;QACrC,MAAM,IAAIA,iBAAiB,CAAC,CAAC;MAC/B;MACA,MAAMa,KAAK;IACb;EACF;AACF;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}